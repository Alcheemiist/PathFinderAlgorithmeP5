{"ast":null,"code":"var _jsxFileName = \"/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx\";\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 1440;\nconst height = 800;\nconst Xb = width / 20;\nconst Yb = height / 20;\nexport default function Dashboard() {\n  var exp = false;\n  var sep = false;\n  var isFound = false;\n  let Board = new Array(Xb * Yb).fill(0);\n\n  // acces with Board[y * Xb + x]\n  var state = {\n    board: {\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data: {\n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  };\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(1000);\n    p5.background('#222222');\n    for (let i = 0; i < 1400; i += 20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i += 20) {\n      p5.line(0, i, 1400, i);\n    }\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n  };\n  const infoBoard = p5 => {\n    p5.fill(\"white\");\n    if (exp || sep) p5.rect(0, 0, 230, 200);else p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb, 130, 20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20, 20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20, 40);\n    p5.text(\"Press s : select first square\", 20, 60);\n    p5.text(\"Press e : select second square\", 20, 80);\n    p5.text(\"Press w : select wall square\", 20, 100);\n    p5.text(\"Press p : Use Path Finder\", 20, 120);\n    p5.text(\"Press r : Reset\", 20, 140);\n    if (sep) {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20, 170);\n    }\n    if (exp) {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20, 190);\n    }\n  };\n  const drawBoardElements = p5 => {\n    for (let i = 0; i < Xb; i++) for (let j = 0; j < Yb; j++) {\n      // white 0; red 2; green 3; brown 4; yellow 8;  black;\n      if (Board[j * Xb + i] === 0) {\n        p5.fill(\"white\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 2) {\n        p5.fill(\"red\");\n        p5.square(i * 20, j * 20, 20);\n        p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 3) {\n        p5.fill(\"green\");\n        p5.square(i * 20, j * 20, 20);\n        p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 4) {\n        p5.fill(\"brown\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 8) {\n        p5.fill(\"yellow\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else {\n        p5.fill(\"black\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      }\n    }\n    if (isFound) {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  };\n  const handleAction = p5 => {\n    if (p5.key === 's' && exp === false) {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20, 170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'e' && sep === false) {\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20, 190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'w') {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n        sep = true;\n      }\n    }\n    if (p5.key === 'r') {\n      exp = false;\n      sep = false;\n      isFound = false;\n      for (let i = 0; i < Xb; i++) {\n        for (let j = 0; j < Yb; j++) if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4) Board[j * Xb + i] = 0;\n      }\n      let curr = 0;\n      while (curr < Board.length) {\n        if (Board[curr] === 8) Board[curr] = 0;\n        curr++;\n      }\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false) {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'Ã±') {\n      // init default variables \n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n      var dx2 = 71 * 20 - 20;\n      var dy2 = 39 * 20 - 20;\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n      // walls \n      for (var i = 0; i < 20; i++) Board[(10 + i) * Xb + 29] = 4;\n\n      // BFS \n      // white 0; red 2; green 3; brown 4; yellow 8;  black;\n\n      const unit = 20;\n      const _board = Board;\n      var _visited = new Array(Xb * Yb).fill(false);\n      var _queue = new Array();\n      var _queue1 = new Array();\n      var _path = new Array();\n      var _parent = new Array(Xb * Yb).fill(-1);\n      var _start = Math.round(y / unit) * Xb + Math.round(x / unit);\n      var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit);\n      var _current = _start;\n\n      // set queue\n      while (_queue.length > 0) _queue.pop();\n      while (_queue1.length > 0) _queue1.pop();\n      while (_path.length > 0) _path.pop();\n      while (_parent.length > 0) _parent.pop();\n      var dis = _end - _start;\n      var dir = dis > 0 ? 1 : -1;\n      dis = Math.abs(dis);\n      _queue.push(_start);\n      _visited[_start] = true;\n      while (_current >= 0 && _current <= Xb * Yb && _current != _end) {\n        if (_board[_current] == 4) break;\n\n        // if (_current < 0  && _current > Xb * Yb  && _board[_current + 1] != 4 && _visited[_current + 1] == false)\n        //   _queue.push(_current + 1)\n        // if (_current < 0  && _current > Xb * Yb  && _board[_current + Xb] != 4 && _visited[_current + Xb] == false)\n        //   _queue.push(_current + Xb)\n        // if (_current < 0  && _current > Xb * Yb  && _board[_current - Xb] != 4 && _visited[_current - Xb] == false)\n        //   _queue.push(_current - Xb)\n        // if (_current < 0  && _current > Xb * Yb  && _board[_current - 1] != 4 && _visited[_current - 1] == false)\n        //   _queue.push(_current - 1)\n\n        // while (_queue.length > 0)\n        // {\n        //   console.log(_queue[0])\n        //   if (_queue[0] % Xb != Xb - 1 && _board[_queue[0]] != 4 && _visited[_queue[0]] == false)\n        //     _path.push(_queue[0])\n\n        //     _visited[_queue[_queue.length - 1]] = true\n        //     _queue.pop()\n        // }\n        // if (Board[_current] % Xb != Xb - 1 && Board[_current]  != 4 && _visited[_current] == false)\n        _queue.push(_board[_current]);\n        if (dis >= Xb) {\n          _current += dir * Xb;\n          dis -= Xb;\n        } else {\n          _current += dir;\n          dis -= 1;\n        }\n      }\n\n      // draw path\n      while (_queue.length > 0) {\n        var current = _path[_queue.length - 1];\n        // p5.fill(\"orange\");\n        // p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n        Board[current] = 8;\n        _queue.pop();\n      }\n      // drawing squars\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n    }\n  };\n  const draw = p5 => {\n    drawBoardElements(p5);\n    handleAction(p5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VisualizeData, {\n      data: state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nfunction VisualizeData(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Dashboard Infos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordX\",\n      children: [\"X : \", props.data.expX, \" , \", props.data.expX]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordY\",\n      children: [\"Y : \", props.data.sepX, \" , \", props.data.sepY]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\n_c2 = VisualizeData;\nconst FindYourPath = (X, p5) => {\n  // console.log(\"X = \" + X[0] + \", \" + X[1]);\n  // console.log(\"Y = \" + Y[0] + \", \" + Y[1]);\n  // alert(\"X = \" + X[0] + \", \" + X[1]);\n  // alert(\"Y = \" + Y[0] + \", \" + Y[1]);\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n  // p5.rect(X.data.expX, X.data.expY, 20, 20);\n\n  // alert(\"X \"  + X.expX  + \" \" + X.expY + \" \\nY \" + X.sepX + \" \" + X.sepY);\n};\n_c3 = FindYourPath;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"VisualizeData\");\n$RefreshReg$(_c3, \"FindYourPath\");","map":{"version":3,"names":["React","Sketch","width","height","Xb","Yb","Dashboard","exp","sep","isFound","Board","Array","fill","state","board","data","expX","expY","sepX","sepY","setup","p5","canvasParentRef","createCanvas","parent","stroke","frameRate","background","i","line","infoBoard","rect","text","key","mouseIsPressed","drawBoardElements","j","square","noFill","FindYourPath","handleAction","x","Math","round","mouseX","y","mouseY","console","log","mouseButton","LEFT","curr","length","dx2","dy2","unit","_board","_visited","_queue","_queue1","_path","_parent","_start","_end","_current","pop","dis","dir","abs","push","current","draw","VisualizeData","props","X","x2","y2"],"sources":["/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport './Dashboard.css';\nimport { wait } from '@testing-library/user-event/dist/utils';\n\n\n\n\nconst   width = 1440;\nconst   height = 800;\nconst   Xb = width / 20;\nconst   Yb = height / 20;\n\n\nexport interface Props {\n  data: {\n    // name: string;\n    expX: number;\n    expY: number;\n    sepX: number;\n    sepY: number;\n  }\n}\n\nexport default function Dashboard()\n{\n  var     exp = false;\n  var     sep = false;\n  var     isFound = false;\n  let     Board =  new Array(Xb * Yb).fill(0);\n\n  // acces with Board[y * Xb + x]\n  var state = {\n    board:{\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data :  {  \n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  }\n  const setup = (p5: p5Types, canvasParentRef: Element) => {\n\n\t\tp5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(1000);\n\t\tp5.background('#222222')\n\n    for (let i = 0; i < 1400; i+=20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i+=20) {\n      p5.line(0, i, 1400, i);\n    }\n\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n  }\n  const infoBoard = (p5: p5Types) => {\n    p5.fill(\"white\");\n    if (exp ||Â sep)\n      p5.rect(0, 0, 230, 200);\n    else \n      p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb , 130,20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20,20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20,40);\n    p5.text(\"Press s : select first square\", 20,60);\n    p5.text(\"Press e : select second square\", 20,80);\n    p5.text(\"Press w : select wall square\", 20,100);\n    p5.text(\"Press p : Use Path Finder\", 20,120);\n    p5.text(\"Press r : Reset\", 20,140);\n    if (sep)\n    {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20,170)\n    }\n    if (exp)\n    {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20,190)\n    }\n  }\n  const drawBoardElements = (p5: p5Types ) => {\n    for (let i = 0; i < Xb; i++) \n      for (let j = 0; j < Yb; j++) \n      {\n        // white 0; red 2; green 3; brown 4; yellow 8;  black;\n        if (Board[j * Xb + i] === 0){\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 2)\n        {\n          p5.fill(\"red\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 3)\n        {\n          p5.fill(\"green\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 4)\n        {\n          p5.fill(\"brown\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 8)\n        {\n          p5.fill(\"yellow\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else\n        {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    if (isFound)\n    {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  }\n\n  const handleAction = (p5: p5Types) => {\n    if (p5.key === 's' && exp === false)\n    {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20)\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20,170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n    if (p5.key === 'e' && sep === false)\n    {\n\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20,190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n    if (p5.key === 'w')\n    {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n          Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n\n          sep = true;\n      }\n   \n    }\n    if (p5.key === 'r')\n    {\n      exp = false;\n      sep = false;\n      isFound = false;\n\n      for (let i = 0; i < Xb; i++) \n      {\n        for (let j = 0; j < Yb; j++) \n          if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4)\n            Board[j * Xb + i] = 0;\n      }\n      let curr = 0\n      while (curr < Board.length)\n      {\n        if (Board[curr] === 8)\n          Board[curr] = 0;\n          curr++\n      }\n\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false)\n    {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'Ã±')\n    {\n      // init default variables \n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n      var dx2 = 71 * 20 - 20 ;\n      var dy2 = 39 * 20 - 20;\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n      // walls \n      for (var i = 0; i < 20; i++)\n        Board[(10 + i) * Xb + 29] = 4;\n\n      // BFS \n      // white 0; red 2; green 3; brown 4; yellow 8;  black;\n\n      const unit = 20;\n      const _board = Board\n      var _visited = new Array(Xb * Yb).fill(false)\n      var _queue = new Array()\n      var _queue1 = new Array()\n      var _path = new Array()\n      var _parent = new Array(Xb * Yb).fill(-1)\n      var _start = Math.round(y / unit) * Xb + Math.round(x / unit)\n      var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit)\n      var _current = _start\n\n      // set queue\n      while (_queue.length > 0) _queue.pop()\n      while (_queue1.length > 0) _queue1.pop()\n      while (_path.length > 0) _path.pop()\n      while (_parent.length > 0) _parent.pop()\n\n      var dis = _end - _start\n      var dir = dis > 0 ? 1 : -1\n      dis = Math.abs(dis)\n    \n      _queue.push(_start)\n      _visited[_start] = true\n\n      while (_current >= 0 && _current <= Xb * Yb && _current != _end)\n      {\n        if (_board[_current] == 4)\n          break;  \n       \n        // if (_current < 0  && _current > Xb * Yb  && _board[_current + 1] != 4 && _visited[_current + 1] == false)\n        //   _queue.push(_current + 1)\n        // if (_current < 0  && _current > Xb * Yb  && _board[_current + Xb] != 4 && _visited[_current + Xb] == false)\n        //   _queue.push(_current + Xb)\n        // if (_current < 0  && _current > Xb * Yb  && _board[_current - Xb] != 4 && _visited[_current - Xb] == false)\n        //   _queue.push(_current - Xb)\n        // if (_current < 0  && _current > Xb * Yb  && _board[_current - 1] != 4 && _visited[_current - 1] == false)\n        //   _queue.push(_current - 1)\n        \n        // while (_queue.length > 0)\n        // {\n        //   console.log(_queue[0])\n        //   if (_queue[0] % Xb != Xb - 1 && _board[_queue[0]] != 4 && _visited[_queue[0]] == false)\n        //     _path.push(_queue[0])\n         \n        //     _visited[_queue[_queue.length - 1]] = true\n        //     _queue.pop()\n        // }\n        // if (Board[_current] % Xb != Xb - 1 && Board[_current]  != 4 && _visited[_current] == false)\n        _queue.push(_board[_current])\n\n\n        if (dis >= Xb)\n        {\n          _current += dir * Xb\n          dis -=  Xb\n        }\n        else \n        {\n          _current += dir\n          dis     -= 1\n        }\n      } \n\n\n\n\n      // draw path\n      while (_queue.length > 0)\n      {\n        var current = _path[_queue.length - 1]\n        // p5.fill(\"orange\");\n        // p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n        Board[current] = 8;\n        _queue.pop()\n      }\n      // drawing squars\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n    }\n  }\n\n  const draw = (p5: p5Types) => {\n    drawBoardElements(p5)\n    handleAction(p5)\n\t}\n  return(\n    <div className='board'>\n      <Sketch setup={setup} draw={draw} />\n      <VisualizeData data={state.data}/>\n      {/* <div className='cordX'>X : {state.data.expX} , {state.data.expX}</div>\n      <div className='cordY'>Y : {state.data.sepX} , {state.data.sepY}</div> */}\n    </div>\n  )\n}\n\n\n\n\n\n\n\nfunction VisualizeData(props: Props)\n{\n  return (\n    <div className='board__info'>\n        <div>Dashboard Infos</div>\n        <div className='cordX'>X : {props.data.expX} , {props.data.expX}</div>\n        <div className='cordY'>Y : {props.data.sepX} , {props.data.sepY}</div>\n      </div>);\n}\n\nconst FindYourPath = (X : Props, p5: p5Types) => {\n  // console.log(\"X = \" + X[0] + \", \" + X[1]);\n  // console.log(\"Y = \" + Y[0] + \", \" + Y[1]);\n  // alert(\"X = \" + X[0] + \", \" + X[1]);\n  // alert(\"Y = \" + Y[0] + \", \" + Y[1]);\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n\n  \n\n\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n  // p5.rect(X.data.expX, X.data.expY, 20, 20);\n\n  // alert(\"X \"  + X.expX  + \" \" + X.expY + \" \\nY \" + X.sepX + \" \" + X.sepY);\n  \n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}