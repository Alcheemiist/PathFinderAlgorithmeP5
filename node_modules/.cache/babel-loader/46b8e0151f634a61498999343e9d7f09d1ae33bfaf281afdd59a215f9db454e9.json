{"ast":null,"code":"var _jsxFileName = \"/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx\";\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  const width = 1440;\n  const height = 800;\n  const Xb = width / 20;\n  const Yb = height / 20;\n  var exp = false;\n  var sep = false;\n  var isFound = false;\n  let Board = new Array(Xb * Yb).fill(0);\n  // acces with Board[y * Xb + x]\n  var state = {\n    board: {\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data: {\n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  };\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(30);\n    p5.background('#222222');\n    for (let i = 0; i < 1400; i += 20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i += 20) {\n      p5.line(0, i, 1400, i);\n    }\n    for (let i = 0; i < Xb; i++) {\n      for (let j = 0; j < Yb; j++) {\n        if (Board[j * Xb + i] === 0) {\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n    Board[3 * Xb + 71] = 4;\n  };\n  const infoBoard = p5 => {\n    p5.fill(\"white\");\n    if (exp || sep) p5.rect(0, 0, 230, 200);else p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb, 130, 20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20, 20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20, 40);\n    p5.text(\"Press s : select first square\", 20, 60);\n    p5.text(\"Press e : select second square\", 20, 80);\n    p5.text(\"Press w : select wall square\", 20, 100);\n    p5.text(\"Press p : Use Path Finder\", 20, 120);\n    p5.text(\"Press r : Reset\", 20, 140);\n    if (sep) {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20, 170);\n    }\n    if (exp) {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20, 190);\n    }\n  };\n  const drawBoardElements = p5 => {\n    // Board[3 * Xb + 71] = 1;\n\n    p5.background('#222222');\n    for (let i = 0; i < Xb; i++) {\n      for (let j = 0; j < Yb; j++) {\n        if (Board[j * Xb + i] === 0) {\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 2) {\n          p5.fill(\"red\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 3) {\n          p5.fill(\"green\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 4) {\n          p5.fill(\"brown\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 8) {\n          p5.fill(\"yellow\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n    if (isFound) {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  };\n  const handleAction = p5 => {\n    if (p5.key === 's' && exp === false) {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20, 170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'e' && sep === false) {\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20, 190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'w') {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n        sep = true;\n      }\n    }\n    if (p5.key === 'r') {\n      exp = false;\n      sep = false;\n      isFound = false;\n      for (let i = 0; i < Xb; i++) {\n        for (let j = 0; j < Yb; j++) if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4) Board[j * Xb + i] = 0;\n      }\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false) {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'Ã±') {\n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n      var dx2 = 71 * 20 - 20;\n      var dy2 = 39 * 20 - 20;\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n\n      // BFS \n      // green 3 ; red 2 ; brown 4 ; \n      // black 0 ; white 1\n      // set up boards \n      const unit = 20;\n      const _board = Board;\n      var _visited = new Array(Xb * Yb).fill(false);\n      var _queue = new Array();\n      var _path = new Array();\n      var _parent = new Array(Xb * Yb).fill(-1);\n      var _start = Math.round(y / unit) * Xb + Math.round(x / unit);\n      var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit);\n      var _current = _start;\n      var _found = false;\n      var _pathFound = false;\n      var _pathLength = 0;\n      var _pathIndex = 0;\n\n      // set queue\n      while (_queue.length > 0) _queue.pop();\n      while (_path.length > 0) _path.pop();\n      while (_parent.length > 0) _parent.pop();\n      while (_current > 0 && _current < Xb * Yb) {\n        if (_current === _end) break;\n        if (_board[_current] !== 3 && _current !== _start && _visited[_current] === false) {\n          _queue.push(_current);\n          _visited[_current] = true;\n        }\n        if (_start - _end > 0) _current--;else _current++;\n      }\n\n      // while (_queue.length > 0)\n      // {\n      //   _current = _queue.shift()\n      //   if (_current === _end)\n      //   {\n      //     _found = true\n      //     break\n      //   }\n\n      //   if (_current - Xb >= 0 && _visited[_current - Xb] === false && _board[_current - Xb] !== 3)\n      //   {\n      //     _queue.push(_current - Xb)\n      //     _visited[_current - Xb] = true\n      //     _parent[_current - Xb] = _current\n      //   }\n      //   if (_current + Xb < Xb * Yb && _visited[_current + Xb] === false && _board[_current + Xb] !== 3)\n      //   {\n      //     _queue.push(_current + Xb)\n      //     _visited[_current + Xb] = true\n      //     _parent[_current + Xb] = _current\n      //   }\n      //   if (_current - 1 >= 0 && _visited[_current - 1] === false && _board[_current - 1] !== 3)\n      //   {\n      //     _queue.push(_current - 1)\n      //     _visited[_current - 1] = true\n      //     _parent[_current - 1] = _current\n      //   }\n      //   if (_current + 1 < Xb * Yb && _visited[_current + 1] === false && _board[_current + 1] !== 3)\n      //   {\n      //     _queue.push(_current + 1)\n      //     _visited[_current + 1] = true\n      //     _parent[_current + 1] = _current\n      //   }\n\n      // }\n      console.log(\"drawing path\", _queue);\n      // draw path\n      while (_queue.length > 0) {\n        var current = _queue[_queue.length - 1];\n        p5.fill(\"yellow\");\n        p5.square(current % Xb * unit, Math.floor(current / Xb) * unit, unit);\n        _queue.pop();\n      }\n      // drawing squars\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n    }\n  };\n  const draw = p5 => {\n    drawBoardElements(p5);\n    handleAction(p5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VisualizeData, {\n      data: state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nfunction VisualizeData(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Dashboard Infos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordX\",\n      children: [\"X : \", props.data.expX, \" , \", props.data.expX]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordY\",\n      children: [\"Y : \", props.data.sepX, \" , \", props.data.sepY]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n}\n_c2 = VisualizeData;\nconst FindYourPath = (X, p5) => {\n  // console.log(\"X = \" + X[0] + \", \" + X[1]);\n  // console.log(\"Y = \" + Y[0] + \", \" + Y[1]);\n  // alert(\"X = \" + X[0] + \", \" + X[1]);\n  // alert(\"Y = \" + Y[0] + \", \" + Y[1]);\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n  // p5.rect(X.data.expX, X.data.expY, 20, 20);\n\n  // alert(\"X \"  + X.expX  + \" \" + X.expY + \" \\nY \" + X.sepX + \" \" + X.sepY);\n};\n_c3 = FindYourPath;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"VisualizeData\");\n$RefreshReg$(_c3, \"FindYourPath\");","map":{"version":3,"names":["React","Sketch","Dashboard","width","height","Xb","Yb","exp","sep","isFound","Board","Array","fill","state","board","data","expX","expY","sepX","sepY","setup","p5","canvasParentRef","createCanvas","parent","stroke","frameRate","background","i","line","j","square","noFill","infoBoard","rect","text","key","mouseIsPressed","drawBoardElements","FindYourPath","handleAction","x","Math","round","mouseX","y","mouseY","console","log","mouseButton","LEFT","dx2","dy2","unit","_board","_visited","_queue","_path","_parent","_start","_end","_current","_found","_pathFound","_pathLength","_pathIndex","length","pop","push","current","floor","draw","VisualizeData","props","X","x2","y2"],"sources":["/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport './Dashboard.css';\n\nexport interface Props {\n  data: {\n    // name: string;\n    expX: number;\n    expY: number;\n    sepX: number;\n    sepY: number;\n  }\n}\nexport default function Dashboard()\n{\n  const   width = 1440;\n\tconst   height = 800;\n  const   Xb = width / 20;\n  const   Yb = height / 20;\n  var     exp = false;\n  var     sep = false;\n  var     isFound = false;\n  let     Board =  new Array(Xb * Yb).fill(0);\n  // acces with Board[y * Xb + x]\n  var state = {\n    board:{\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data :  {  \n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  }\n\n  const setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tp5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(30);\n\t\tp5.background('#222222')\n    for (let i = 0; i < 1400; i+=20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i+=20) {\n      p5.line(0, i, 1400, i);\n    }\n    for (let i = 0; i < Xb; i++) \n    {\n      for (let j = 0; j < Yb; j++) \n      {\n        if (Board[j * Xb + i] === 0){\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else\n        {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n\n\n    Board[3 * Xb + 71] = 4;\n\n  }\n  const infoBoard = (p5: p5Types) => {\n    p5.fill(\"white\");\n    if (exp ||Â sep)\n      p5.rect(0, 0, 230, 200);\n    else \n      p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb , 130,20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20,20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20,40);\n    p5.text(\"Press s : select first square\", 20,60);\n    p5.text(\"Press e : select second square\", 20,80);\n    p5.text(\"Press w : select wall square\", 20,100);\n    p5.text(\"Press p : Use Path Finder\", 20,120);\n    p5.text(\"Press r : Reset\", 20,140);\n    if (sep)\n    {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20,170)\n    }\n    if (exp)\n    {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20,190)\n    }\n  }\n  const drawBoardElements = (p5: p5Types ) => {\n  \n    // Board[3 * Xb + 71] = 1;\n    \n    p5.background('#222222')\n    for (let i = 0; i < Xb; i++) \n      {\n        for (let j = 0; j < Yb; j++) \n        {\n          if (Board[j * Xb + i] === 0){\n            p5.fill(\"white\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 2)\n          {\n            p5.fill(\"red\");\n            p5.square(i * 20, j * 20, 20);\n            p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 3)\n          {\n            p5.fill(\"green\");\n            p5.square(i * 20, j * 20, 20);\n            p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 4)\n          {\n            p5.fill(\"brown\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 8)\n          {\n            p5.fill(\"yellow\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else\n          {\n            p5.fill(\"black\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n        }\n    }\n    if (isFound)\n    {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  }\n  const handleAction = (p5: p5Types) => {\n    if (p5.key === 's' && exp === false)\n    {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20)\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20,170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n    if (p5.key === 'e' && sep === false)\n    {\n\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20,190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n    if (p5.key === 'w')\n    {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n          Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n\n          sep = true;\n      }\n   \n    }\n    if (p5.key === 'r')\n    {\n      exp = false;\n      sep = false;\n      isFound = false;\n\n      for (let i = 0; i < Xb; i++) \n      {\n        for (let j = 0; j < Yb; j++) \n          if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4)\n            Board[j * Xb + i] = 0;\n      }\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false)\n    {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'Ã±')\n    {\n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n\n      var dx2 = 71 * 20 - 20 ;\n      var dy2 = 39 * 20 - 20;\n\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n\n      // BFS \n      // green 3 ; red 2 ; brown 4 ; \n      // black 0 ; white 1\n      // set up boards \n      const unit = 20;\n      const _board = Board\n      var _visited = new Array(Xb * Yb).fill(false)\n      var _queue = new Array()\n      var _path = new Array()\n      var _parent = new Array(Xb * Yb).fill(-1)\n      var _start = Math.round(y / unit) * Xb + Math.round(x / unit)\n      var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit)\n      var _current = _start\n      var _found = false\n      var _pathFound = false\n      var _pathLength = 0\n      var _pathIndex = 0\n\n      // set queue\n      while (_queue.length > 0) _queue.pop()\n      while (_path.length > 0) _path.pop()\n      while (_parent.length > 0) _parent.pop()\n\n      \n\n      while (_current > 0 && _current < Xb * Yb)\n      {\n        if (_current === _end)\n          break;\n\n        if (_board[_current] !== 3 && _current !== _start && _visited[_current] === false)\n        {\n          _queue.push(_current)\n          _visited[_current] = true\n        }\n\n        if (_start - _end > 0)\n          _current--\n        else\n          _current++\n\n      }\n\n      // while (_queue.length > 0)\n      // {\n      //   _current = _queue.shift()\n      //   if (_current === _end)\n      //   {\n      //     _found = true\n      //     break\n      //   }\n\n      //   if (_current - Xb >= 0 && _visited[_current - Xb] === false && _board[_current - Xb] !== 3)\n      //   {\n      //     _queue.push(_current - Xb)\n      //     _visited[_current - Xb] = true\n      //     _parent[_current - Xb] = _current\n      //   }\n      //   if (_current + Xb < Xb * Yb && _visited[_current + Xb] === false && _board[_current + Xb] !== 3)\n      //   {\n      //     _queue.push(_current + Xb)\n      //     _visited[_current + Xb] = true\n      //     _parent[_current + Xb] = _current\n      //   }\n      //   if (_current - 1 >= 0 && _visited[_current - 1] === false && _board[_current - 1] !== 3)\n      //   {\n      //     _queue.push(_current - 1)\n      //     _visited[_current - 1] = true\n      //     _parent[_current - 1] = _current\n      //   }\n      //   if (_current + 1 < Xb * Yb && _visited[_current + 1] === false && _board[_current + 1] !== 3)\n      //   {\n      //     _queue.push(_current + 1)\n      //     _visited[_current + 1] = true\n      //     _parent[_current + 1] = _current\n      //   }\n\n      // }\n      console.log(\"drawing path\" , _queue)\n      // draw path\n      while (_queue.length > 0)\n      {\n        var current = _queue[_queue.length - 1]\n        p5.fill(\"yellow\");\n        p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n        _queue.pop()\n      }\n      // drawing squars\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n\n    }\n  }\n\n  const draw = (p5: p5Types) => {\n    drawBoardElements(p5)\n    handleAction(p5)\n\t}\n  return(\n    <div className='board'>\n      <Sketch setup={setup} draw={draw} />\n      <VisualizeData data={state.data}/>\n      {/* <div className='cordX'>X : {state.data.expX} , {state.data.expX}</div>\n      <div className='cordY'>Y : {state.data.sepX} , {state.data.sepY}</div> */}\n    </div>\n  )\n}\n\nfunction VisualizeData(props: Props)\n{\n  return (\n    <div className='board__info'>\n        <div>Dashboard Infos</div>\n        <div className='cordX'>X : {props.data.expX} , {props.data.expX}</div>\n        <div className='cordY'>Y : {props.data.sepX} , {props.data.sepY}</div>\n      </div>);\n}\n\nconst FindYourPath = (X : Props, p5: p5Types) => {\n  // console.log(\"X = \" + X[0] + \", \" + X[1]);\n  // console.log(\"Y = \" + Y[0] + \", \" + Y[1]);\n  // alert(\"X = \" + X[0] + \", \" + X[1]);\n  // alert(\"Y = \" + Y[0] + \", \" + Y[1]);\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n\n  \n\n\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n  // p5.rect(X.data.expX, X.data.expY, 20, 20);\n\n  // alert(\"X \"  + X.expX  + \" \" + X.expY + \" \\nY \" + X.sepX + \" \" + X.sepY);\n  \n\n}\n\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAO,iBAAiB;AAAC;AAWzB,eAAe,SAASC,SAAS,GACjC;EACE,MAAQC,KAAK,GAAG,IAAI;EACrB,MAAQC,MAAM,GAAG,GAAG;EACnB,MAAQC,EAAE,GAAGF,KAAK,GAAG,EAAE;EACvB,MAAQG,EAAE,GAAGF,MAAM,GAAG,EAAE;EACxB,IAAQG,GAAG,GAAG,KAAK;EACnB,IAAQC,GAAG,GAAG,KAAK;EACnB,IAAQC,OAAO,GAAG,KAAK;EACvB,IAAQC,KAAK,GAAI,IAAIC,KAAK,CAACN,EAAE,GAAGC,EAAE,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC;EAC3C;EACA,IAAIC,KAAK,GAAG;IACVC,KAAK,EAAC;MACJT,EAAE,EAAEA,EAAE;MACNC,EAAE,EAAEA,EAAE;MACNI,KAAK,EAAEA;IACT,CAAC;IACDK,IAAI,EAAI;MACNC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE;IACR;EACF,CAAC;EAED,MAAMC,KAAK,GAAG,CAACC,EAAW,EAAEC,eAAwB,KAAK;IACzDD,EAAE,CAACE,YAAY,CAACpB,KAAK,EAAEC,MAAM,CAAC,CAACoB,MAAM,CAACF,eAAe,CAAC;IACpDD,EAAE,CAACI,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACfJ,EAAE,CAACK,SAAS,CAAC,EAAE,CAAC;IAClBL,EAAE,CAACM,UAAU,CAAC,SAAS,CAAC;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,EAAEA,CAAC,IAAE,EAAE,EAAE;MAC/BP,EAAE,CAACQ,IAAI,CAACD,CAAC,EAAE,CAAC,EAAEA,CAAC,EAAE,IAAI,CAAC;IACxB;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,IAAE,EAAE,EAAE;MAC9BP,EAAE,CAACQ,IAAI,CAAC,CAAC,EAAED,CAAC,EAAE,IAAI,EAAEA,CAAC,CAAC;IACxB;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,EAAE,EAAEuB,CAAC,EAAE,EAC3B;MACE,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,EAAE,EAAEwB,CAAC,EAAE,EAC3B;QACE,IAAIpB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,EAAC;UAC1BP,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;UAChBS,EAAE,CAACU,MAAM,CAACH,CAAC,GAAG,EAAE,EAAEE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;UAC7BT,EAAE,CAACW,MAAM,EAAE;QACb,CAAC,MAED;UACEX,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;UAChBS,EAAE,CAACU,MAAM,CAACH,CAAC,GAAG,EAAE,EAAEE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;UAC7BT,EAAE,CAACW,MAAM,EAAE;QACb;MACF;IACF;IACAnB,KAAK,CAACC,KAAK,CAACJ,KAAK,GAAGA,KAAK;IACzBG,KAAK,CAACC,KAAK,CAACT,EAAE,GAAGA,EAAE;IACnBQ,KAAK,CAACC,KAAK,CAACR,EAAE,GAAGA,EAAE;IAGnBI,KAAK,CAAC,CAAC,GAAGL,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;EAExB,CAAC;EACD,MAAM4B,SAAS,GAAIZ,EAAW,IAAK;IACjCA,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;IAChB,IAAIL,GAAG,IAAIC,GAAG,EACZa,EAAE,CAACa,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,KAExBb,EAAE,CAACa,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IACzBb,EAAE,CAACT,IAAI,CAAC,UAAU,CAAC;IACnBS,EAAE,CAACI,MAAM,CAAC,UAAU,CAAC;IACrBJ,EAAE,CAACc,IAAI,CAAC,OAAO,GAAG9B,EAAE,GAAG,SAAS,GAAGC,EAAE,EAAG,GAAG,EAAC,EAAE,CAAC;IAC/Ce,EAAE,CAACc,IAAI,CAAC,kBAAkB,GAAGd,EAAE,CAACe,GAAG,GAAG,IAAI,EAAE,EAAE,EAAC,EAAE,CAAC;IAClDf,EAAE,CAACc,IAAI,CAAC,kBAAkB,GAAGd,EAAE,CAACgB,cAAc,GAAG,GAAG,EAAE,EAAE,EAAC,EAAE,CAAC;IAC5DhB,EAAE,CAACc,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAC,EAAE,CAAC;IAC/Cd,EAAE,CAACc,IAAI,CAAC,gCAAgC,EAAE,EAAE,EAAC,EAAE,CAAC;IAChDd,EAAE,CAACc,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAC,GAAG,CAAC;IAC/Cd,EAAE,CAACc,IAAI,CAAC,2BAA2B,EAAE,EAAE,EAAC,GAAG,CAAC;IAC5Cd,EAAE,CAACc,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAC,GAAG,CAAC;IAClC,IAAI3B,GAAG,EACP;MACEa,EAAE,CAACc,IAAI,CAAC,MAAM,GAAGtB,KAAK,CAACE,IAAI,CAACI,IAAI,GAAG,IAAI,GAAGN,KAAK,CAACE,IAAI,CAACG,IAAI,EAAE,EAAE,EAAC,GAAG,CAAC;IACpE;IACA,IAAIX,GAAG,EACP;MACEc,EAAE,CAACc,IAAI,CAAC,MAAM,GAAGtB,KAAK,CAACE,IAAI,CAACE,IAAI,GAAG,IAAI,GAAGJ,KAAK,CAACE,IAAI,CAACC,IAAI,EAAE,EAAE,EAAC,GAAG,CAAC;IACpE;EACF,CAAC;EACD,MAAMsB,iBAAiB,GAAIjB,EAAW,IAAM;IAE1C;;IAEAA,EAAE,CAACM,UAAU,CAAC,SAAS,CAAC;IACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,EAAE,EAAEuB,CAAC,EAAE,EACzB;MACE,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,EAAE,EAAEwB,CAAC,EAAE,EAC3B;QACE,IAAIpB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,EAAC;UAC1BP,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;UAChBS,EAAE,CAACU,MAAM,CAACH,CAAC,GAAG,EAAE,EAAEE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;UAC7BT,EAAE,CAACW,MAAM,EAAE;QACb,CAAC,MACI,IAAItB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,EAChC;UACEP,EAAE,CAACT,IAAI,CAAC,KAAK,CAAC;UACdS,EAAE,CAACU,MAAM,CAACH,CAAC,GAAG,EAAE,EAAEE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;UAC7BT,EAAE,CAACc,IAAI,CAAC,KAAK,EAAEP,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;UACvCT,EAAE,CAACW,MAAM,EAAE;QACb,CAAC,MACI,IAAItB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,EAChC;UACEP,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;UAChBS,EAAE,CAACU,MAAM,CAACH,CAAC,GAAG,EAAE,EAAEE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;UAC7BT,EAAE,CAACc,IAAI,CAAC,KAAK,EAAEP,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;UACvCT,EAAE,CAACW,MAAM,EAAE;QACb,CAAC,MACI,IAAItB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,EAChC;UACEP,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;UAChBS,EAAE,CAACU,MAAM,CAACH,CAAC,GAAG,EAAE,EAAEE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;UAC7BT,EAAE,CAACW,MAAM,EAAE;QACb,CAAC,MACI,IAAItB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,EAChC;UACEP,EAAE,CAACT,IAAI,CAAC,QAAQ,CAAC;UACjBS,EAAE,CAACU,MAAM,CAACH,CAAC,GAAG,EAAE,EAAEE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;UAC7BT,EAAE,CAACW,MAAM,EAAE;QACb,CAAC,MAED;UACEX,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;UAChBS,EAAE,CAACU,MAAM,CAACH,CAAC,GAAG,EAAE,EAAEE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC;UAC7BT,EAAE,CAACW,MAAM,EAAE;QACb;MACF;IACJ;IACA,IAAIvB,OAAO,EACX;MACEY,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;MAChB2B,YAAY,CAAC1B,KAAK,EAAEQ,EAAE,CAAC;IACzB;IACAY,SAAS,CAACZ,EAAE,CAAC;EACf,CAAC;EACD,MAAMmB,YAAY,GAAInB,EAAW,IAAK;IACpC,IAAIA,EAAE,CAACe,GAAG,KAAK,GAAG,IAAI7B,GAAG,KAAK,KAAK,EACnC;MACEc,EAAE,CAACT,IAAI,CAAC,KAAK,CAAC;MACd,IAAI6B,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACtB,EAAE,CAACuB,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;MACvC,IAAIC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACtB,EAAE,CAACyB,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;MACvCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAGP,CAAC,EAAEI,CAAC,CAAC;MAC5BxB,EAAE,CAACU,MAAM,CAACU,CAAC,EAAEI,CAAC,EAAE,EAAE,CAAC;MACnB,IAAIxB,EAAE,CAACgB,cAAc,KAAK,IAAI,IAAIhB,EAAE,CAAC4B,WAAW,KAAK5B,EAAE,CAAC6B,IAAI,EAC5D;QACE7B,EAAE,CAACT,IAAI,CAAC,QAAQ,CAAC;QACjBS,EAAE,CAACU,MAAM,CAACU,CAAC,EAAEI,CAAC,EAAE,EAAE,CAAC;QACnBnC,KAAK,CAACgC,IAAI,CAACC,KAAK,CAACE,CAAC,GAAG,EAAE,CAAC,GAAGxC,EAAE,GAAGqC,IAAI,CAACC,KAAK,CAACF,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;QACvDlC,GAAG,GAAG,IAAI;QACVM,KAAK,CAACE,IAAI,CAACC,IAAI,GAAGyB,CAAC;QACnB5B,KAAK,CAACE,IAAI,CAACE,IAAI,GAAG4B,CAAC;QACnBxB,EAAE,CAACc,IAAI,CAAC,MAAM,GAAGM,CAAC,GAAG,IAAI,GAAGI,CAAC,EAAE,EAAE,EAAC,GAAG,CAAC;;QAEtC;QACA;QACA;QACA;QACA;QACA;QACA;MACF;IACF;;IACA,IAAIxB,EAAE,CAACe,GAAG,KAAK,GAAG,IAAI5B,GAAG,KAAK,KAAK,EACnC;MAEEa,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;MAChB,IAAI6B,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACtB,EAAE,CAACuB,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;MACvC,IAAIC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACtB,EAAE,CAACyB,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;MACvCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAGP,CAAC,EAAEI,CAAC,CAAC;MAC5BxB,EAAE,CAACU,MAAM,CAACU,CAAC,EAAEI,CAAC,EAAE,EAAE,CAAC;MAEnB,IAAIxB,EAAE,CAACgB,cAAc,KAAK,IAAI,IAAIhB,EAAE,CAAC4B,WAAW,KAAK5B,EAAE,CAAC6B,IAAI,EAC5D;QACE7B,EAAE,CAACT,IAAI,CAAC,QAAQ,CAAC;QACjBS,EAAE,CAACU,MAAM,CAACU,CAAC,EAAEI,CAAC,EAAE,EAAE,CAAC;QACnBnC,KAAK,CAACgC,IAAI,CAACC,KAAK,CAACE,CAAC,GAAG,EAAE,CAAC,GAAGxC,EAAE,GAAGqC,IAAI,CAACC,KAAK,CAACF,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;QACvDjC,GAAG,GAAG,IAAI;QACVK,KAAK,CAACE,IAAI,CAACG,IAAI,GAAGuB,CAAC;QACnB5B,KAAK,CAACE,IAAI,CAACI,IAAI,GAAG0B,CAAC;QACnBxB,EAAE,CAACc,IAAI,CAAC,MAAM,GAAGM,CAAC,GAAG,IAAI,GAAGI,CAAC,EAAE,EAAE,EAAC,GAAG,CAAC;;QAEtC;QACA;QACA;QACA;QACA;QACA;QACA;MACF;IACF;;IACA,IAAIxB,EAAE,CAACe,GAAG,KAAK,GAAG,EAClB;MACEf,EAAE,CAACT,IAAI,CAAC,OAAO,CAAC;MAChB,IAAI6B,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACtB,EAAE,CAACuB,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;MACvC,IAAIC,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACtB,EAAE,CAACyB,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;MACvCC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAGP,CAAC,EAAEI,CAAC,CAAC;MAC5BxB,EAAE,CAACU,MAAM,CAACU,CAAC,EAAEI,CAAC,EAAE,EAAE,CAAC;MAEnB,IAAIxB,EAAE,CAACgB,cAAc,KAAK,IAAI,IAAIhB,EAAE,CAAC4B,WAAW,KAAK5B,EAAE,CAAC6B,IAAI,EAC5D;QACE7B,EAAE,CAACT,IAAI,CAAC,QAAQ,CAAC;QACjBS,EAAE,CAACU,MAAM,CAACU,CAAC,EAAEI,CAAC,EAAE,EAAE,CAAC;;QAEnB;QACA;QACA;QACEnC,KAAK,CAACgC,IAAI,CAACC,KAAK,CAACE,CAAC,GAAG,EAAE,CAAC,GAAGxC,EAAE,GAAGqC,IAAI,CAACC,KAAK,CAACF,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;QAEvDjC,GAAG,GAAG,IAAI;MACd;IAEF;IACA,IAAIa,EAAE,CAACe,GAAG,KAAK,GAAG,EAClB;MACE7B,GAAG,GAAG,KAAK;MACXC,GAAG,GAAG,KAAK;MACXC,OAAO,GAAG,KAAK;MAEf,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,EAAE,EAAEuB,CAAC,EAAE,EAC3B;QACE,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,EAAE,EAAEwB,CAAC,EAAE,EACzB,IAAIpB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,IAAIlB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,IAAIlB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,KAAK,CAAC,EAC/ElB,KAAK,CAACoB,CAAC,GAAGzB,EAAE,GAAGuB,CAAC,CAAC,GAAG,CAAC;MAC3B;IACF;IACA,IAAIP,EAAE,CAACe,GAAG,KAAK,GAAG,IAAI7B,GAAG,KAAK,IAAI,IAAIC,GAAG,KAAK,IAAI,IAAIC,OAAO,KAAK,KAAK,EACvE;MACE8B,YAAY,CAAC1B,KAAK,EAAEQ,EAAE,CAAC;MACvBZ,OAAO,GAAG,IAAI;IAChB;IACA,IAAIY,EAAE,CAACe,GAAG,KAAK,GAAG,EAClB;MACE,IAAIK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MACpB,IAAII,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MAEpB,IAAIM,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MACtB,IAAIC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MAEtB/B,EAAE,CAACT,IAAI,CAAC,QAAQ,CAAC;MACjBS,EAAE,CAACU,MAAM,CAACU,CAAC,EAAEI,CAAC,EAAE,EAAE,CAAC;MACnBxB,EAAE,CAACT,IAAI,CAAC,MAAM,CAAC;MACfS,EAAE,CAACU,MAAM,CAACoB,GAAG,EAAEC,GAAG,EAAE,EAAE,CAAC;;MAEvB;MACA;MACA;MACA;MACA,MAAMC,IAAI,GAAG,EAAE;MACf,MAAMC,MAAM,GAAG5C,KAAK;MACpB,IAAI6C,QAAQ,GAAG,IAAI5C,KAAK,CAACN,EAAE,GAAGC,EAAE,CAAC,CAACM,IAAI,CAAC,KAAK,CAAC;MAC7C,IAAI4C,MAAM,GAAG,IAAI7C,KAAK,EAAE;MACxB,IAAI8C,KAAK,GAAG,IAAI9C,KAAK,EAAE;MACvB,IAAI+C,OAAO,GAAG,IAAI/C,KAAK,CAACN,EAAE,GAAGC,EAAE,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;MACzC,IAAI+C,MAAM,GAAGjB,IAAI,CAACC,KAAK,CAACE,CAAC,GAAGQ,IAAI,CAAC,GAAGhD,EAAE,GAAGqC,IAAI,CAACC,KAAK,CAACF,CAAC,GAAGY,IAAI,CAAC;MAC7D,IAAIO,IAAI,GAAGlB,IAAI,CAACC,KAAK,CAACS,GAAG,GAAGC,IAAI,CAAC,GAAGhD,EAAE,GAAGqC,IAAI,CAACC,KAAK,CAACQ,GAAG,GAAGE,IAAI,CAAC;MAC/D,IAAIQ,QAAQ,GAAGF,MAAM;MACrB,IAAIG,MAAM,GAAG,KAAK;MAClB,IAAIC,UAAU,GAAG,KAAK;MACtB,IAAIC,WAAW,GAAG,CAAC;MACnB,IAAIC,UAAU,GAAG,CAAC;;MAElB;MACA,OAAOT,MAAM,CAACU,MAAM,GAAG,CAAC,EAAEV,MAAM,CAACW,GAAG,EAAE;MACtC,OAAOV,KAAK,CAACS,MAAM,GAAG,CAAC,EAAET,KAAK,CAACU,GAAG,EAAE;MACpC,OAAOT,OAAO,CAACQ,MAAM,GAAG,CAAC,EAAER,OAAO,CAACS,GAAG,EAAE;MAIxC,OAAON,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAGxD,EAAE,GAAGC,EAAE,EACzC;QACE,IAAIuD,QAAQ,KAAKD,IAAI,EACnB;QAEF,IAAIN,MAAM,CAACO,QAAQ,CAAC,KAAK,CAAC,IAAIA,QAAQ,KAAKF,MAAM,IAAIJ,QAAQ,CAACM,QAAQ,CAAC,KAAK,KAAK,EACjF;UACEL,MAAM,CAACY,IAAI,CAACP,QAAQ,CAAC;UACrBN,QAAQ,CAACM,QAAQ,CAAC,GAAG,IAAI;QAC3B;QAEA,IAAIF,MAAM,GAAGC,IAAI,GAAG,CAAC,EACnBC,QAAQ,EAAE,MAEVA,QAAQ,EAAE;MAEd;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACAd,OAAO,CAACC,GAAG,CAAC,cAAc,EAAGQ,MAAM,CAAC;MACpC;MACA,OAAOA,MAAM,CAACU,MAAM,GAAG,CAAC,EACxB;QACE,IAAIG,OAAO,GAAGb,MAAM,CAACA,MAAM,CAACU,MAAM,GAAG,CAAC,CAAC;QACvC7C,EAAE,CAACT,IAAI,CAAC,QAAQ,CAAC;QACjBS,EAAE,CAACU,MAAM,CAAEsC,OAAO,GAAGhE,EAAE,GAAIgD,IAAI,EAAEX,IAAI,CAAC4B,KAAK,CAACD,OAAO,GAAGhE,EAAE,CAAC,GAAGgD,IAAI,EAAEA,IAAI,CAAC;QACvEG,MAAM,CAACW,GAAG,EAAE;MACd;MACA;MACA9C,EAAE,CAACT,IAAI,CAAC,QAAQ,CAAC;MACjBS,EAAE,CAACU,MAAM,CAACU,CAAC,EAAEI,CAAC,EAAE,EAAE,CAAC;MACnBxB,EAAE,CAACT,IAAI,CAAC,MAAM,CAAC;MACfS,EAAE,CAACU,MAAM,CAACoB,GAAG,EAAEC,GAAG,EAAE,EAAE,CAAC;IAEzB;EACF,CAAC;EAED,MAAMmB,IAAI,GAAIlD,EAAW,IAAK;IAC5BiB,iBAAiB,CAACjB,EAAE,CAAC;IACrBmB,YAAY,CAACnB,EAAE,CAAC;EACnB,CAAC;EACA,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,wBACpB,QAAC,MAAM;MAAC,KAAK,EAAED,KAAM;MAAC,IAAI,EAAEmD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC,QAAC,aAAa;MAAC,IAAI,EAAE1D,KAAK,CAACE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAG9B;AAEV;AAAC,KArWuBb,SAAS;AAuWjC,SAASsE,aAAa,CAACC,KAAY,EACnC;EACE,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBACxB;MAAA,UAAK;IAAe;MAAA;MAAA;MAAA;IAAA,QAAM,eAC1B;MAAK,SAAS,EAAC,OAAO;MAAA,WAAC,MAAI,EAACA,KAAK,CAAC1D,IAAI,CAACC,IAAI,EAAC,KAAG,EAACyD,KAAK,CAAC1D,IAAI,CAACC,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACtE;MAAK,SAAS,EAAC,OAAO;MAAA,WAAC,MAAI,EAACyD,KAAK,CAAC1D,IAAI,CAACG,IAAI,EAAC,KAAG,EAACuD,KAAK,CAAC1D,IAAI,CAACI,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAClE;AACZ;AAAC,MARQqD,aAAa;AAUtB,MAAMjC,YAAY,GAAG,CAACmC,CAAS,EAAErD,EAAW,KAAK;EAC/C;EACA;EACA;EACA;EACA,IAAIoB,CAAC,GAAGiC,CAAC,CAAC3D,IAAI,CAACC,IAAI;EACnB,IAAI6B,CAAC,GAAG6B,CAAC,CAAC3D,IAAI,CAACE,IAAI;EACnB,IAAI0D,EAAE,GAAGD,CAAC,CAAC3D,IAAI,CAACG,IAAI;EACpB,IAAI0D,EAAE,GAAGF,CAAC,CAAC3D,IAAI,CAACI,IAAI;EAKpBE,EAAE,CAACQ,IAAI,CAACY,CAAC,GAAG,EAAE,EAAEI,CAAC,GAAG,EAAE,EAAE8B,EAAE,GAAG,EAAE,EAAEC,EAAE,GAAG,EAAE,CAAC;EACzC;;EAEA;AAGF,CAAC;AAAA,MAnBKrC,YAAY;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}