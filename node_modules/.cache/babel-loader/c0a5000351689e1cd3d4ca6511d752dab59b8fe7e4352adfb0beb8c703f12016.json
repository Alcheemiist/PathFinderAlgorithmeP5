{"ast":null,"code":"var _jsxFileName = \"/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport P5 from \"p5\";\nimport './Dashboard.css';\n\n// import styled  from \"styled-components\"\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const width = 500;\n  const height = 500;\n  const visualisation = _ref => {\n    let {\n      width,\n      height\n    } = _ref;\n    const sketch = p5 => {\n      p5.setup = () => {\n        p5.createCanvas(width, height);\n      };\n      p5.draw = () => {\n        p5.line(0, 0, width, height);\n      };\n    };\n    const p5 = new P5(sketch);\n    return {\n      cleanup: p5.remove\n    };\n  };\n  useEffect(() => {\n    const {\n      cleanup\n    } = visualisation({\n      width,\n      height\n    });\n    return cleanup; // This removes the canvas when the component is rerendered.\n  }, []);\n  let x = 50;\n  const y = 50;\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(100, 100).parent(canvasParentRef);\n  };\n  const draw = p5 => {\n    // p5.background(100);\n    // p5.ellipse(x, y, 90, 90);\n    // x++;\n  };\n  // const ssetup = (p5: any, canvasParentRef : Element) => {\n  //   cnv = p5.createCanvas(x, y).parent(canvasParentRef)\n  //   cnv.mousePressed((event) => {\n  //     console.log(\"Clicked on the canvas. Event:\", event)\n  //   })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n// const Cont = styled.div`\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Sketch","P5","useEffect","Dashboard","width","height","visualisation","sketch","p5","setup","createCanvas","draw","line","cleanup","remove","x","y","canvasParentRef","parent"],"sources":["/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx"],"sourcesContent":["import React from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport P5 from \"p5\";\nimport './Dashboard.css';\n\n// import styled  from \"styled-components\"\nimport { useEffect, useId } from 'react';\n\ntype SketchCleanup = { cleanup: () => void };\n\n\n\nexport default function Dashboard()\n{\n  const width = 500;\n  const height = 500;\n\n  const visualisation = ({ width, height }: { width: number, height: number }): SketchCleanup => {\n    const sketch = (p5: P5) => {\n      p5.setup = () => {\n        p5.createCanvas(width, height);\n      };\n      p5.draw = () => {\n        p5.line(0, 0, width, height);\n      };\n    };\n  \n    const p5 = new P5(sketch);\n  \n    return {\n      cleanup: p5.remove,\n    };\n  };\n\n  useEffect(() => {\n    const { cleanup } = visualisation({\n        width,\n      height,\n    });\n\n    return cleanup; // This removes the canvas when the component is rerendered.\n    }, []);\n    \n  let x = 50;\n\tconst y = 50;\n\n  const setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tp5.createCanvas(100, 100).parent(canvasParentRef);\n\t};\n\n\tconst draw = (p5: p5Types) => {\n\t\t// p5.background(100);\n\t\t// p5.ellipse(x, y, 90, 90);\n\t\t// x++;\n\t};\n  // const ssetup = (p5: any, canvasParentRef : Element) => {\n  //   cnv = p5.createCanvas(x, y).parent(canvasParentRef)\n  //   cnv.mousePressed((event) => {\n  //     console.log(\"Clicked on the canvas. Event:\", event)\n  //   })\n  // }\n  \n  return(\n    <div className='board'>\n      <h1>Dashboard</h1>\n      <Sketch setup={setup} draw={draw} />;\n    </div>\n  )\n}\n\n// const Cont = styled.div`\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAOC,EAAE,MAAM,IAAI;AACnB,OAAO,iBAAiB;;AAExB;AACA,SAASC,SAAS,QAAe,OAAO;AAAC;AAMzC,eAAe,SAASC,SAAS,GACjC;EAAA;EACE,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAElB,MAAMC,aAAa,GAAG,QAAyE;IAAA,IAAxE;MAAEF,KAAK;MAAEC;IAA0C,CAAC;IACzE,MAAME,MAAM,GAAIC,EAAM,IAAK;MACzBA,EAAE,CAACC,KAAK,GAAG,MAAM;QACfD,EAAE,CAACE,YAAY,CAACN,KAAK,EAAEC,MAAM,CAAC;MAChC,CAAC;MACDG,EAAE,CAACG,IAAI,GAAG,MAAM;QACdH,EAAE,CAACI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAER,KAAK,EAAEC,MAAM,CAAC;MAC9B,CAAC;IACH,CAAC;IAED,MAAMG,EAAE,GAAG,IAAIP,EAAE,CAACM,MAAM,CAAC;IAEzB,OAAO;MACLM,OAAO,EAAEL,EAAE,CAACM;IACd,CAAC;EACH,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAM;MAAEW;IAAQ,CAAC,GAAGP,aAAa,CAAC;MAC9BF,KAAK;MACPC;IACF,CAAC,CAAC;IAEF,OAAOQ,OAAO,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAER,IAAIE,CAAC,GAAG,EAAE;EACX,MAAMC,CAAC,GAAG,EAAE;EAEX,MAAMP,KAAK,GAAG,CAACD,EAAW,EAAES,eAAwB,KAAK;IACzDT,EAAE,CAACE,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAACQ,MAAM,CAACD,eAAe,CAAC;EAClD,CAAC;EAED,MAAMN,IAAI,GAAIH,EAAW,IAAK;IAC7B;IACA;IACA;EAAA,CACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,wBACpB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,MAAM;MAAC,KAAK,EAAEC,KAAM;MAAC,IAAI,EAAEE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,KACtC;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;AAEV;;AAEA;AAAA,GA1DwBR,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}