{"ast":null,"code":"var _jsxFileName = \"/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx\";\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  const width = 1300;\n  const height = 600;\n  const Xb = width / 20;\n  const Yb = height / 20;\n  var exp = false;\n  var sep = false;\n  var structX = [];\n  var structY = [];\n  let Board = new Array(Xb * Yb).fill(0);\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(30);\n    p5.background('#222222');\n    for (let i = 0; i < 1300; i += 20) {\n      p5.line(i, 0, i, 1300);\n    }\n    for (let i = 0; i < 600; i += 20) {\n      p5.line(0, i, 1300, i);\n    }\n    Board[5] = 1;\n    console.table(Board);\n    for (let i = 0; i < Xb; i++) {\n      for (let j = 0; j < Yb; j++) {\n        if (Board[j * Xb + i] === 0) {\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n  };\n  const draw = p5 => {\n    p5.background('#222222');\n    for (let i = 0; i < Xb; i++) {\n      for (let j = 0; j < Yb; j++) {\n        if (Board[j * Xb + i] === 0) {\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 2) {\n          p5.fill(\"red\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\"X = \" + i * 20 + \", \" + j * 20, i * 20 + 5, j * 20 + 15);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 3) {\n          p5.fill(\"green\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 4) {\n          p5.fill(\"brown\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n    p5.text(p5.key, 110, 115);\n    if (p5.key === 's' && exp === false) {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n      }\n    }\n    if (p5.key === 'e' && sep === false) {\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n      }\n    }\n    if (p5.key === 'w') {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n        sep = true;\n      }\n    }\n    if (p5.key === 'r') {\n      exp = false;\n      sep = false;\n      for (let i = 0; i < Xb; i++) {\n        for (let j = 0; j < Yb; j++) if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4) Board[j * Xb + i] = 0;\n      }\n    }\n    if (p5.key === 'p') {\n      FindYourPath();\n    }\n  };\n  const mousePressed = p5 => {\n    if (p5.mouseButton === p5.LEFT) {\n      console.log('Left mouse button pressed');\n    } else if (p5.mouseButton === p5.RIGHT) {\n      console.log('Right mouse button pressed');\n    }\n  };\n  const FindYourPath = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Press 's' to start drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Sketch","Dashboard","width","height","Xb","Yb","exp","sep","structX","structY","Board","Array","fill","setup","p5","canvasParentRef","createCanvas","parent","stroke","frameRate","background","i","line","console","table","j","square","noFill","draw","text","key","x","Math","round","mouseX","y","mouseY","log","mouseIsPressed","mouseButton","LEFT","FindYourPath","mousePressed","RIGHT"],"sources":["/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx"],"sourcesContent":["import React from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport './Dashboard.css';\n\nexport default function Dashboard()\n{\n  const   width = 1300;\n\tconst   height = 600;\n  const Xb = width / 20;\n  const Yb = height / 20;\n  var exp = false;\n  var sep = false;\n  var structX = [];\n  var structY = [];\n\n\n\n  let Board =  new Array(Xb * Yb).fill(0);\n  \n  const setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tp5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(30);\n   \n\t\tp5.background('#222222')\n    \n    for (let i = 0; i < 1300; i+=20) {\n      p5.line(i, 0, i, 1300);\n    }\n    for (let i = 0; i < 600; i+=20) {\n      p5.line(0, i, 1300, i);\n    }\n\n    Board[5] = 1;\n    console.table(Board);\n    for (let i = 0; i < Xb; i++) \n    {\n      for (let j = 0; j < Yb; j++) \n      {\n        if (Board[j * Xb + i] === 0){\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else\n        {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n\n  };\n\n\tconst draw = (p5: p5Types) => {\n\n    p5.background('#222222')\n    for (let i = 0; i < Xb; i++) \n      {\n        for (let j = 0; j < Yb; j++) \n        {\n          if (Board[j * Xb + i] === 0){\n            p5.fill(\"white\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 2)\n          {\n            p5.fill(\"red\");\n            p5.square(i * 20, j * 20, 20);\n            p5.text(\"X = \" + (i * 20) + \", \" + (j * 20), i * 20 + 5 ,j * 20 + 15);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 3)\n          {\n            p5.fill(\"green\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 4)\n          {\n            p5.fill(\"brown\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else\n          {\n            p5.fill(\"black\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n        }\n    }\n\n    p5.text(p5.key, 110,115);\n\n\n    if (p5.key === 's' && exp === false)\n    {\n\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        \n\n      }\n    }\n    if (p5.key === 'e' && sep === false)\n    {\n\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n      }\n    }\n    if (p5.key === 'w')\n    {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n        sep = true;\n      }\n   \n    }\n    if (p5.key === 'r')\n    {\n      exp = false;\n      sep = false;\n      for (let i = 0; i < Xb; i++) \n      {\n        for (let j = 0; j < Yb; j++) \n          if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4)\n            Board[j * Xb + i] = 0;\n      }\n    }\n\n    if (p5.key === 'p')\n    {\n      FindYourPath();\n    }\n\t};\n\n  const mousePressed = (p5: p5Types) => {\n    if (p5.mouseButton === p5.LEFT) {\n      console.log('Left mouse button pressed');\n    } else if (p5.mouseButton === p5.RIGHT) {\n      console.log('Right mouse button pressed');\n    }\n  }\n\n  const FindYourPath = () => {\n  \n  }\n\n\n  return(\n    <div className='board'>\n      <Sketch setup={setup} draw={draw} />\n      <div className='board__info'>\n        <div>Dashboard\n          </div>\n        <p>Press 's' to start drawing</p>\n      </div>\n    </div>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}