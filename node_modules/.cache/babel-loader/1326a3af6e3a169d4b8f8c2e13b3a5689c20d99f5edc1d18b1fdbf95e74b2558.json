{"ast":null,"code":"var _jsxFileName = \"/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx\";\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  const width = 1300;\n  const height = 600;\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n  };\n  const draw = p5 => {\n    p5.background('#222222');\n    // p5.ellipse(x, y, 90, 90);\n    // x++;\n    // Draw a square at location (30, 20) with a side size of 55.\n    p5.square(0, 0, 20);\n    // p5.describe('white square with black outline and round edges of different radii');\n\n    for (let i = 0; i < 600; i += 20) {\n      p5.line(20, 0, i, 600);\n    }\n\n    // p5.describe(\n    //   'a 78 pixels long line running from mid-top to bottom-right of canvas'\n    // );\n  };\n  // const ssetup = (p5: any, canvasParentRef : Element) => {\n  //   cnv = p5.createCanvas(x, y).parent(canvasParentRef)\n  //   cnv.mousePressed((event) => {\n  //     console.log(\"Clicked on the canvas. Event:\", event)\n  //   })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: /*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n// const Cont = styled.div`\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Sketch","Dashboard","width","height","setup","p5","canvasParentRef","createCanvas","parent","draw","background","square","i","line"],"sources":["/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx"],"sourcesContent":["import React from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport './Dashboard.css';\n\nexport default function Dashboard()\n{\n  const   width = 1300;\n\tconst height = 600;\n\n  const setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tp5.createCanvas(width, height).parent(canvasParentRef);\n\t};\n\n\tconst draw = (p5: p5Types) => {\n\t\tp5.background('#222222')\n\t\t// p5.ellipse(x, y, 90, 90);\n\t\t// x++;\n    // Draw a square at location (30, 20) with a side size of 55.\n    p5.square(0, 0, 20);\n    // p5.describe('white square with black outline and round edges of different radii');\n\n    \n    for (let i = 0; i < 600; i+=20) {\n      p5.line(20, 0, i, 600);\n    }\n    \n\n\n    // p5.describe(\n    //   'a 78 pixels long line running from mid-top to bottom-right of canvas'\n    // );\n\n\n\n\t};\n  // const ssetup = (p5: any, canvasParentRef : Element) => {\n  //   cnv = p5.createCanvas(x, y).parent(canvasParentRef)\n  //   cnv.mousePressed((event) => {\n  //     console.log(\"Clicked on the canvas. Event:\", event)\n  //   })\n  // }\n  \n  return(\n    <div className='board'>\n      {/* <h1>Dashboard</h1> */}\n      <Sketch setup={setup} draw={draw} />\n    </div>\n  )\n}\n\n// const Cont = styled.div`\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAO,iBAAiB;AAAC;AAEzB,eAAe,SAASC,SAAS,GACjC;EACE,MAAQC,KAAK,GAAG,IAAI;EACrB,MAAMC,MAAM,GAAG,GAAG;EAEjB,MAAMC,KAAK,GAAG,CAACC,EAAW,EAAEC,eAAwB,KAAK;IACzDD,EAAE,CAACE,YAAY,CAACL,KAAK,EAAEC,MAAM,CAAC,CAACK,MAAM,CAACF,eAAe,CAAC;EACvD,CAAC;EAED,MAAMG,IAAI,GAAIJ,EAAW,IAAK;IAC7BA,EAAE,CAACK,UAAU,CAAC,SAAS,CAAC;IACxB;IACA;IACE;IACAL,EAAE,CAACM,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IACnB;;IAGA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,IAAE,EAAE,EAAE;MAC9BP,EAAE,CAACQ,IAAI,CAAC,EAAE,EAAE,CAAC,EAAED,CAAC,EAAE,GAAG,CAAC;IACxB;;IAIA;IACA;IACA;EAIH,CAAC;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,uBAEpB,QAAC,MAAM;MAAC,KAAK,EAAER,KAAM;MAAC,IAAI,EAAEK;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAChC;AAEV;;AAEA;AAAA,KA9CwBR,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}