{"ast":null,"code":"var _jsxFileName = \"/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx\";\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  const width = 1440;\n  const height = 800;\n  const Xb = width / 20;\n  const Yb = height / 20;\n  var exp = false;\n  var sep = false;\n  var isFound = false;\n  let Board = new Array(Xb * Yb).fill(0);\n  let millisecond = 0;\n  let chckpoint = 0;\n\n  // acces with Board[y * Xb + x]\n  var state = {\n    board: {\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data: {\n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  };\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(1000);\n    p5.background('#222222');\n    millisecond = p5.millis();\n    for (let i = 0; i < 1400; i += 20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i += 20) {\n      p5.line(0, i, 1400, i);\n    }\n    for (let i = 0; i < Xb; i++) {\n      for (let j = 0; j < Yb; j++) {\n        if (Board[j * Xb + i] === 0) {\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n  };\n  const infoBoard = p5 => {\n    p5.fill(\"white\");\n    if (exp || sep) p5.rect(0, 0, 230, 200);else p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb, 130, 20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20, 20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20, 40);\n    p5.text(\"Press s : select first square\", 20, 60);\n    p5.text(\"Press e : select second square\", 20, 80);\n    p5.text(\"Press w : select wall square\", 20, 100);\n    p5.text(\"Press p : Use Path Finder\", 20, 120);\n    p5.text(\"Press r : Reset\", 20, 140);\n    if (sep) {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20, 170);\n    }\n    if (exp) {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20, 190);\n    }\n  };\n  const drawBoardElements = p5 => {\n    // Board[3 * Xb + 71] = 1;\n\n    p5.background('#222222');\n    for (let i = 0; i < Xb; i++) {\n      for (let j = 0; j < Yb; j++) {\n        if (Board[j * Xb + i] === 0) {\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 2) {\n          p5.fill(\"red\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 3) {\n          p5.fill(\"green\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 4) {\n          p5.fill(\"brown\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else if (Board[j * Xb + i] === 8) {\n          p5.fill(\"yellow\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        } else {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n    if (isFound) {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  };\n  const handleAction = p5 => {\n    if (p5.key === 's' && exp === false) {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20, 170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'e' && sep === false) {\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20, 190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'w') {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n        sep = true;\n      }\n    }\n    if (p5.key === 'r') {\n      exp = false;\n      sep = false;\n      isFound = false;\n      for (let i = 0; i < Xb; i++) {\n        for (let j = 0; j < Yb; j++) if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4) Board[j * Xb + i] = 0;\n      }\n      let curr = 0;\n      while (curr < Board.length) {\n        if (Board[curr] === 8) Board[curr] = 0;\n        curr++;\n      }\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false) {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'Ã±') {\n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n      var dx2 = 71 * 20 - 20;\n      var dy2 = 39 * 20 - 20;\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n      for (var i = 0; i < Xb; i++) Board[(10 + i) * Xb + 30] = 4;\n\n      // BFS \n      // green 3 ; red 2 ; brown 4 ; \n      // black 0 ; white 1\n      // set up boards \n      const unit = 20;\n      const _board = Board;\n      var _visited = new Array(Xb * Yb).fill(false);\n      var _queue = new Array();\n      var _queue1 = new Array();\n      var _path = new Array();\n      var _parent = new Array(Xb * Yb).fill(-1);\n      var _start = Math.round(y / unit) * Xb + Math.round(x / unit);\n      var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit);\n      var _current = _start;\n      var _found = false;\n      var _pathFound = false;\n      var _pathLength = 0;\n\n      // set queue\n      while (_queue.length > 0) _queue.pop();\n      while (_queue1.length > 0) _queue1.pop();\n      while (_path.length > 0) _path.pop();\n      while (_parent.length > 0) _parent.pop();\n      var dis = _end - _start;\n      var dir = dis > 0 ? 1 : -1;\n      dis = Math.abs(dis);\n      _queue.push(_start);\n      _visited[_start] = true;\n      var grid = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]];\n      var ROW = 4;\n      var COL = 4;\n      var dRow = [-1, 0, 1, 0];\n      var dCol = [0, 1, 0, -1];\n      var vis = Array.from(Array(ROW), () => Array(COL).fill(false));\n      const isValid = (vis, row, col) => {\n        // If cell lies out of bounds\n        if (row < 0 || col < 0 || row >= ROW || col >= COL) return false;\n\n        // If cell is already visited\n        if (vis[row][col]) return false;\n\n        // Otherwise\n        return true;\n      };\n      BFS(grid, vis, 0, 0);\n\n      // draw path\n      while (_path.length > 0) {\n        var current = _path[_path.length - 1];\n        // p5.fill(\"orange\");\n        // p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n        _path.pop();\n      }\n      // drawing squars\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n    }\n  };\n  const draw = p5 => {\n    drawBoardElements(p5);\n    handleAction(p5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VisualizeData, {\n      data: state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nfunction VisualizeData(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Dashboard Infos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordX\",\n      children: [\"X : \", props.data.expX, \" , \", props.data.expX]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordY\",\n      children: [\"Y : \", props.data.sepX, \" , \", props.data.sepY]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n}\n_c2 = VisualizeData;\nconst FindYourPath = (X, p5) => {\n  // console.log(\"X = \" + X[0] + \", \" + X[1]);\n  // console.log(\"Y = \" + Y[0] + \", \" + Y[1]);\n  // alert(\"X = \" + X[0] + \", \" + X[1]);\n  // alert(\"Y = \" + Y[0] + \", \" + Y[1]);\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n  // p5.rect(X.data.expX, X.data.expY, 20, 20);\n\n  // alert(\"X \"  + X.expX  + \" \" + X.expY + \" \\nY \" + X.sepX + \" \" + X.sepY);\n};\n\n// Function to perform the BFS traversal\n_c3 = FindYourPath;\nfunction BFS(grid, vis, row, col) {\n  // Stores indices of the matrix cells\n  var q = [];\n\n  // Mark the starting cell as visited\n  // and push it into the queue\n  q.push([row, col]);\n  vis[row][col] = true;\n\n  // Iterate while the queue\n  // is not empty\n  while (q.length != 0) {\n    var cell = q[0];\n    var x = cell[0];\n    var y = cell[1];\n    document.write(grid[x][y] + \" \");\n    q.shift();\n\n    // Go to the adjacent cells\n    for (var i = 0; i < 4; i++) {\n      var adjx = x + dRow[i];\n      var adjy = y + dCol[i];\n      if (isValid(vis, adjx, adjy)) {\n        q.push([adjx, adjy]);\n        vis[adjx][adjy] = true;\n      }\n    }\n  }\n}\n\n// Driver Code\n// Given input matrix\n\n// Direction vectors\n\n// Function to check if a cell\n// is be visited or not\n_c4 = BFS;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"VisualizeData\");\n$RefreshReg$(_c3, \"FindYourPath\");\n$RefreshReg$(_c4, \"BFS\");","map":{"version":3,"names":["React","Sketch","Dashboard","width","height","Xb","Yb","exp","sep","isFound","Board","Array","fill","millisecond","chckpoint","state","board","data","expX","expY","sepX","sepY","setup","p5","canvasParentRef","createCanvas","parent","stroke","frameRate","background","millis","i","line","j","square","noFill","infoBoard","rect","text","key","mouseIsPressed","drawBoardElements","FindYourPath","handleAction","x","Math","round","mouseX","y","mouseY","console","log","mouseButton","LEFT","curr","length","dx2","dy2","unit","_board","_visited","_queue","_queue1","_path","_parent","_start","_end","_current","_found","_pathFound","_pathLength","pop","dis","dir","abs","push","grid","ROW","COL","dRow","dCol","vis","from","isValid","row","col","BFS","current","draw","VisualizeData","props","X","x2","y2","q","cell","document","write","shift","adjx","adjy"],"sources":["/Users/alchemist/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport './Dashboard.css';\nimport { wait } from '@testing-library/user-event/dist/utils';\nexport interface Props {\n  data: {\n    // name: string;\n    expX: number;\n    expY: number;\n    sepX: number;\n    sepY: number;\n  }\n}\n\nexport default function Dashboard()\n{\n  const   width = 1440;\n\tconst   height = 800;\n  const   Xb = width / 20;\n  const   Yb = height / 20;\n  var     exp = false;\n  var     sep = false;\n  var     isFound = false;\n  let     Board =  new Array(Xb * Yb).fill(0);\n  let millisecond = 0;\n  let chckpoint = 0;\n\n\n  // acces with Board[y * Xb + x]\n  var state = {\n    board:{\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data :  {  \n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  }\n\n  const setup = (p5: p5Types, canvasParentRef: Element) => {\n\t\tp5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(1000);\n\t\tp5.background('#222222')\n    millisecond = p5.millis();\n\n    for (let i = 0; i < 1400; i+=20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i+=20) {\n      p5.line(0, i, 1400, i);\n    }\n    for (let i = 0; i < Xb; i++) \n    {\n      for (let j = 0; j < Yb; j++) \n      {\n        if (Board[j * Xb + i] === 0){\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else\n        {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    }\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n\n\n\n  }\n  const infoBoard = (p5: p5Types) => {\n    p5.fill(\"white\");\n    if (exp ||Â sep)\n      p5.rect(0, 0, 230, 200);\n    else \n      p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb , 130,20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20,20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20,40);\n    p5.text(\"Press s : select first square\", 20,60);\n    p5.text(\"Press e : select second square\", 20,80);\n    p5.text(\"Press w : select wall square\", 20,100);\n    p5.text(\"Press p : Use Path Finder\", 20,120);\n    p5.text(\"Press r : Reset\", 20,140);\n    if (sep)\n    {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20,170)\n    }\n    if (exp)\n    {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20,190)\n    }\n  }\n  const drawBoardElements = (p5: p5Types ) => {\n  \n    // Board[3 * Xb + 71] = 1;\n    \n    p5.background('#222222')\n    for (let i = 0; i < Xb; i++) \n      {\n     \n        for (let j = 0; j < Yb; j++) \n        {\n          \n          if (Board[j * Xb + i] === 0){\n            p5.fill(\"white\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 2)\n          {\n            p5.fill(\"red\");\n            p5.square(i * 20, j * 20, 20);\n            p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 3)\n          {\n            p5.fill(\"green\");\n            p5.square(i * 20, j * 20, 20);\n            p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 4)\n          {\n            p5.fill(\"brown\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else if (Board[j * Xb + i] === 8)\n          {\n            p5.fill(\"yellow\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n          else\n          {\n            p5.fill(\"black\");\n            p5.square(i * 20, j * 20, 20);\n            p5.noFill();\n          }\n        }\n    }\n    if (isFound)\n    {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  }\n  const handleAction = (p5: p5Types) => {\n    if (p5.key === 's' && exp === false)\n    {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20)\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20,170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n    if (p5.key === 'e' && sep === false)\n    {\n\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20,190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n    if (p5.key === 'w')\n    {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n          Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n\n          sep = true;\n      }\n   \n    }\n    if (p5.key === 'r')\n    {\n      exp = false;\n      sep = false;\n      isFound = false;\n\n      for (let i = 0; i < Xb; i++) \n      {\n        for (let j = 0; j < Yb; j++) \n          if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4)\n            Board[j * Xb + i] = 0;\n      }\n      let curr = 0\n      while (curr < Board.length)\n      {\n        if (Board[curr] === 8)\n          Board[curr] = 0;\n          curr++\n      }\n\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false)\n    {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'Ã±')\n    {\n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n\n      var dx2 = 71 * 20 - 20 ;\n      var dy2 = 39 * 20 - 20;\n\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n\n      for (var i = 0; i < Xb; i++)\n        Board[(10 + i) * Xb + 30] = 4;\n\n      // BFS \n      // green 3 ; red 2 ; brown 4 ; \n      // black 0 ; white 1\n      // set up boards \n      const unit = 20;\n      const _board = Board\n      var _visited = new Array(Xb * Yb).fill(false)\n      var _queue = new Array()\n      var _queue1 = new Array()\n      var _path = new Array()\n      var _parent = new Array(Xb * Yb).fill(-1)\n      var _start = Math.round(y / unit) * Xb + Math.round(x / unit)\n      var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit)\n      var _current = _start\n      var _found = false\n      var _pathFound = false\n      var _pathLength = 0\n\n      // set queue\n      while (_queue.length > 0) _queue.pop()\n      while (_queue1.length > 0) _queue1.pop()\n      while (_path.length > 0) _path.pop()\n      while (_parent.length > 0) _parent.pop()\n\n      var dis = _end - _start\n      var dir = dis > 0 ? 1 : -1\n      dis = Math.abs(dis)\n    \n      _queue.push(_start)\n      _visited[_start] = true\n      var grid = [[1, 2, 3, 4 ],\n                  [5, 6, 7, 8 ],\n                  [9, 10, 11, 12 ],\n                  [13, 14, 15, 16 ] ];\n\n      var ROW = 4;\n      var COL = 4;\n      var dRow = [-1, 0, 1, 0 ];\n      var dCol = [0, 1, 0, -1 ];\n\n      var vis = Array.from(Array(ROW), ()=> Array(COL).fill(false));\n    \n      const  isValid = (vis, row, col) =>\n      {\n        // If cell lies out of bounds\n        if (row < 0 || col < 0\n            || row >= ROW || col >= COL)\n            return false;\n      \n        // If cell is already visited\n        if (vis[row][col])\n            return false;\n            \n        // Otherwise\n        return true;\n      }\n \n    BFS(grid, vis, 0, 0);\n\n      // draw path\n      while (_path.length > 0)\n      {\n        var current = _path[_path.length - 1]\n        // p5.fill(\"orange\");\n        // p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n        _path.pop()\n      }\n      // drawing squars\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n    }\n  }\n\n  const draw = (p5: p5Types) => {\n    drawBoardElements(p5)\n    handleAction(p5)\n\t}\n  return(\n    <div className='board'>\n      <Sketch setup={setup} draw={draw} />\n      <VisualizeData data={state.data}/>\n      {/* <div className='cordX'>X : {state.data.expX} , {state.data.expX}</div>\n      <div className='cordY'>Y : {state.data.sepX} , {state.data.sepY}</div> */}\n    </div>\n  )\n}\n\nfunction VisualizeData(props: Props)\n{\n  return (\n    <div className='board__info'>\n        <div>Dashboard Infos</div>\n        <div className='cordX'>X : {props.data.expX} , {props.data.expX}</div>\n        <div className='cordY'>Y : {props.data.sepX} , {props.data.sepY}</div>\n      </div>);\n}\n\nconst FindYourPath = (X : Props, p5: p5Types) => {\n  // console.log(\"X = \" + X[0] + \", \" + X[1]);\n  // console.log(\"Y = \" + Y[0] + \", \" + Y[1]);\n  // alert(\"X = \" + X[0] + \", \" + X[1]);\n  // alert(\"Y = \" + Y[0] + \", \" + Y[1]);\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n\n  \n\n\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n  // p5.rect(X.data.expX, X.data.expY, 20, 20);\n\n  // alert(\"X \"  + X.expX  + \" \" + X.expY + \" \\nY \" + X.sepX + \" \" + X.sepY);\n  \n\n}\n\n\n\n// Function to perform the BFS traversal\nfunction BFS( grid, vis,row, col)\n{\n    // Stores indices of the matrix cells\n    var q = [];\n\n    // Mark the starting cell as visited\n    // and push it into the queue\n    q.push([row, col ]);\n    vis[row][col] = true;\n\n    // Iterate while the queue\n    // is not empty\n    while (q.length!=0) {\n\n        var cell = q[0];\n        var x = cell[0];\n        var y = cell[1];\n\n        document.write( grid[x][y] + \" \");\n\n        q.shift();\n\n        // Go to the adjacent cells\n        for (var i = 0; i < 4; i++) {\n\n            var adjx = x + dRow[i];\n            var adjy = y + dCol[i];\n\n            if (isValid(vis, adjx, adjy)) {\n                q.push([adjx, adjy ]);\n                vis[adjx][adjy] = true;\n            }\n        }\n    }\n}\n\n// Driver Code\n// Given input matrix\n\n// Direction vectors\n\n// Function to check if a cell\n// is be visited or not\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}