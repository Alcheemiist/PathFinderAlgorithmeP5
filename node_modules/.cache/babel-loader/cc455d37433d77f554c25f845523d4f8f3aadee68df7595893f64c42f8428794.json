{"ast":null,"code":"var _jsxFileName = \"/Users/eelaazmi/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx\";\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Node {\n  constructor(_x, _y, _visited, _index) {\n    this.x = void 0;\n    this.y = void 0;\n    this.visited = void 0;\n    this.f = void 0;\n    this.g = void 0;\n    this.h = void 0;\n    this.index = void 0;\n    this._parent = void 0;\n    this.x = _x;\n    this.y = _y;\n    this.visited = _visited;\n    this.index = _index;\n    this.f = 0;\n    this.g = 0;\n    this.h = 0;\n    this._parent = null;\n  }\n  setX(x) {\n    this.x = x;\n  }\n  setY(y) {\n    this.y = y;\n  }\n  setF(f) {\n    this.f = f;\n  }\n  setf() {\n    this.f = this.g + this.h;\n  }\n  setG(g) {\n    this.g = g;\n  }\n  setH(h) {\n    this.h = h;\n  }\n  setVisited(visited) {\n    this.visited = visited;\n  }\n  setParent(parent) {\n    this._parent = parent;\n  }\n  getX() {\n    return this.x;\n  }\n  getY() {\n    return this.y;\n  }\n  getF() {\n    return this.f;\n  }\n  getG() {\n    return this.g;\n  }\n  getH() {\n    return this.h;\n  }\n  getVisited() {\n    return this.visited;\n  }\n  getParent() {\n    return this._parent;\n  }\n}\nconst width = 1440;\nconst height = 800;\nconst Xb = width / 20;\nconst Yb = height / 20;\nexport default function Dashboard() {\n  var exp = false;\n  var sep = false;\n  var isFound = false;\n  let Board = new Array(Xb * Yb).fill(0);\n\n  // acces with Board[y * Xb + x]\n  var state = {\n    board: {\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data: {\n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  };\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(1000);\n    p5.background('#222222');\n    for (let i = 0; i < 1400; i += 20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i += 20) {\n      p5.line(0, i, 1400, i);\n    }\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n  };\n  const infoBoard = p5 => {\n    p5.fill(\"white\");\n    if (exp || sep) p5.rect(0, 0, 230, 200);else p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb, 130, 20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20, 20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20, 40);\n    p5.text(\"Press s : select first square\", 20, 60);\n    p5.text(\"Press e : select second square\", 20, 80);\n    p5.text(\"Press w : select wall square\", 20, 100);\n    p5.text(\"Press p : Use Path Finder\", 20, 120);\n    p5.text(\"Press r : Reset\", 20, 140);\n    if (sep) {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20, 170);\n    }\n    if (exp) {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20, 190);\n    }\n  };\n  const drawBoardElements = p5 => {\n    for (let i = 0; i < Xb; i++) for (let j = 0; j < Yb; j++) {\n      // white 0; red 2; green 3; brown 4; yellow 8;  black;\n      if (Board[j * Xb + i] === 0) {\n        p5.fill(\"white\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 2) {\n        p5.fill(\"red\");\n        p5.square(i * 20, j * 20, 20);\n        p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 3) {\n        p5.fill(\"green\");\n        p5.square(i * 20, j * 20, 20);\n        p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 4) {\n        p5.fill(\"brown\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 8) {\n        p5.fill(\"orange\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else {\n        p5.fill(\"black\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      }\n    }\n    if (isFound) {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  };\n  const setWalls = p5 => {\n    // init default variables \n    var x = 13 * 20 - 20;\n    var y = 10 * 20 - 20;\n    var dx2 = 71 * 20 - 20;\n    var dy2 = 39 * 20 - 20;\n    p5.fill(\"orange\");\n    p5.square(x, y, 20);\n    p5.fill(\"grey\");\n    p5.square(dx2, dy2, 20);\n    // walls \n    for (var i = 0; i < 20; i++) Board[(10 + i) * Xb + 29] = 4;\n  };\n  const visualiziation = (p5, _queue) => {\n    // _queue is the path\n    var x = 13 * 20 - 20;\n    var y = 10 * 20 - 20;\n    var dx2 = 71 * 20 - 20;\n    var dy2 = 39 * 20 - 20;\n\n    // draw path\n    while (_queue.length > 0) {\n      var current = _queue[_queue.length - 1].index;\n      // p5.fill(\"orange\");\n      // p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n      Board[current] = 8;\n      _queue.pop();\n    }\n    // drawing squars\n    p5.fill(\"green\");\n    p5.square(x, y, 20);\n    p5.fill(\"grey\");\n    p5.square(dx2, dy2, 20);\n  };\n  const Algo = p5 => {\n    // white 0; red 2; green 3; brown 4; yellow 8;  black;\n    // init default variables\n    setWalls(p5);\n    var x = 13 * 20 - 20;\n    var y = 10 * 20 - 20;\n    var dx2 = 71 * 20 - 20;\n    var dy2 = 39 * 20 - 20;\n    //\n    const unit = 20;\n    // \n    var Nodes = new Array(Xb * Yb).fill(Node);\n    var _queue = new Array();\n    var _start = Math.round(y / unit) * Xb + Math.round(x / unit);\n    var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit);\n\n    // BFS \n    var Closed = new Array();\n    var Open = new Array();\n    var _visited = new Array(Xb * Yb).fill(false);\n    var _current = _start;\n\n    // set queue\n    while (_queue.length > 0) _queue.pop();\n    while (Closed.length > 0) Closed.pop();\n\n    // step 1\n    while (Open.length > 0) Open.pop();\n    Nodes[_start] = new Node(y, x, true, _start);\n    Open.push(Nodes[_start]);\n    _queue.push(Nodes[_start]);\n\n    // step 2\n    if (Open.length <= 0) alert(\"Open is Empty\");\n\n    // step 3\n\n    // remove the smallest element from the open list to the closed list\n    // if node is goal then ralert found \n\n    // step 4\n    // find the neighbors of the current node\n    var Nq = new Array();\n    let tmp = new Node(0, 0, false, _current - Xb);\n    let tmp1 = new Node(0, 0, false, _current + 1);\n    let tmp2 = new Node(0, 0, false, _current + Xb);\n    let tmp3 = new Node(0, 0, false, _current - 1);\n    Nq.push(tmp);\n    Nq.push(tmp1);\n    Nq.push(tmp2);\n    Nq.push(tmp3);\n\n    // _queue.push(tmp)\n    // _queue.push(tmp1)\n    // _queue.push(tmp2)\n    // _queue.push(tmp3)\n\n    // step 5\n    for (let i = 0; i < Nq.length; i++) {\n      if (Board[Nq[i].index] === _end) alert(\"END FOUND\");\n      if (Nq[i].index >= 0 && Nq[i].index < Xb * Yb && Board[Nq[i].index] !== 4 && _visited[Nq[i].index] === false) {\n        var tmpNode = new Node(Nq[i].y, Nq[i].x, true, Nq[i].index);\n        tmpNode.setG(Math.abs(_start - Nq[i].index));\n        tmpNode.setH(Math.abs(_end - Nq[i].index));\n        tmpNode.setf();\n        tmpNode.setParent(Nq[i].index);\n        Open.push(tmpNode);\n      }\n    }\n    visualiziation(p5, _queue);\n  };\n  const handleAction = p5 => {\n    if (p5.key === 's' && exp === false) {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20, 170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'e' && sep === false) {\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20, 190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'w') {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n        sep = true;\n      }\n    }\n    if (p5.key === 'r') {\n      exp = false;\n      sep = false;\n      isFound = false;\n      for (let i = 0; i < Xb; i++) {\n        for (let j = 0; j < Yb; j++) if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4) Board[j * Xb + i] = 0;\n      }\n      let curr = 0;\n      while (curr < Board.length) {\n        if (Board[curr] === 8) Board[curr] = 0;\n        curr++;\n      }\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false) {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'ñ' || p5.key === ';') {\n      Algo(p5);\n    }\n  };\n  const draw = p5 => {\n    drawBoardElements(p5);\n    handleAction(p5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VisualizeData, {\n      data: state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nfunction VisualizeData(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Dashboard Infos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordX\",\n      children: [\"X : \", props.data.expX, \" , \", props.data.expX]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordY\",\n      children: [\"Y : \", props.data.sepX, \" , \", props.data.sepY]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n}\n_c2 = VisualizeData;\nconst FindYourPath = (X, p5) => {\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n};\n_c3 = FindYourPath;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"VisualizeData\");\n$RefreshReg$(_c3, \"FindYourPath\");","map":{"version":3,"names":["React","Sketch","Node","constructor","_x","_y","_visited","_index","x","y","visited","f","g","h","index","_parent","setX","setY","setF","setf","setG","setH","setVisited","setParent","parent","getX","getY","getF","getG","getH","getVisited","getParent","width","height","Xb","Yb","Dashboard","exp","sep","isFound","Board","Array","fill","state","board","data","expX","expY","sepX","sepY","setup","p5","canvasParentRef","createCanvas","stroke","frameRate","background","i","line","infoBoard","rect","text","key","mouseIsPressed","drawBoardElements","j","square","noFill","FindYourPath","setWalls","dx2","dy2","visualiziation","_queue","length","current","pop","Algo","unit","Nodes","_start","Math","round","_end","Closed","Open","_current","push","alert","Nq","tmp","tmp1","tmp2","tmp3","tmpNode","abs","handleAction","mouseX","mouseY","console","log","mouseButton","LEFT","curr","draw","VisualizeData","props","X","x2","y2"],"sources":["/Users/eelaazmi/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport './Dashboard.css';\n\nclass Node {\n  x: number;\n  y : number;\n  visited : boolean;\n  f : number;\n  g : number;\n  h : number;\n  index: number;\n  _parent: Node;\n  \n  constructor(_x : number, _y : number, _visited : boolean, _index : number) {\n    this.x = _x;\n    this.y = _y;\n    this.visited = _visited;\n    this.index = _index;\n\n    this.f = 0;\n    this.g = 0;\n    this.h = 0;\n    this._parent = null;\n  }\n  setX(x : number) { this.x = x;  }\n  setY(y : number) { this.y = y;  }\n  setF(f : number) {  this.f = f; }\n  setf() {  this.f = this.g + this.h; }\n  setG(g : number) {  this.g = g; }\n  setH(h : number) {  this.h = h; }\n  setVisited(visited : boolean) {  this.visited = visited; }\n  setParent(parent : Node) {  this._parent = parent; }\n\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getF() { return this.f; }\n  getG() { return this.g; }\n  getH() { return this.h; }\n  getVisited() { return this.visited; }\n  getParent() { return this._parent; }\n\n}\n\nconst   width = 1440;\nconst   height = 800;\nconst   Xb = width / 20;\nconst   Yb = height / 20;\n\nexport interface Props {\n  data: {\n    // name: string;\n    expX: number;\n    expY: number;\n    sepX: number;\n    sepY: number;\n  }\n}\n\nexport default function Dashboard()\n{\n  var     exp = false;\n  var     sep = false;\n  var     isFound = false;\n  let     Board =  new Array(Xb * Yb).fill(0);\n\n  // acces with Board[y * Xb + x]\n  var state = {\n    board:{\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data :  {  \n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  }\n  const setup = (p5: p5Types, canvasParentRef: Element) => {\n\n\t\tp5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(1000);\n\t\tp5.background('#222222')\n\n    for (let i = 0; i < 1400; i+=20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i+=20) {\n      p5.line(0, i, 1400, i);\n    }\n\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n  }\n  const infoBoard = (p5: p5Types) => {\n    p5.fill(\"white\");\n    if (exp || sep)\n      p5.rect(0, 0, 230, 200);\n    else \n      p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb , 130,20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20,20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20,40);\n    p5.text(\"Press s : select first square\", 20,60);\n    p5.text(\"Press e : select second square\", 20,80);\n    p5.text(\"Press w : select wall square\", 20,100);\n    p5.text(\"Press p : Use Path Finder\", 20,120);\n    p5.text(\"Press r : Reset\", 20,140);\n    if (sep)\n    {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20,170)\n    }\n    if (exp)\n    {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20,190)\n    }\n  }\n  const drawBoardElements = (p5: p5Types ) => {\n    for (let i = 0; i < Xb; i++) \n      for (let j = 0; j < Yb; j++) \n      {\n        // white 0; red 2; green 3; brown 4; yellow 8;  black;\n        if (Board[j * Xb + i] === 0){\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 2)\n        {\n          p5.fill(\"red\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 3)\n        {\n          p5.fill(\"green\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 4)\n        {\n          p5.fill(\"brown\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 8)\n        {\n          p5.fill(\"orange\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else\n        {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    if (isFound)\n    {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  }\n\n  const setWalls = (p5: p5Types) => {\n      // init default variables \n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n      var dx2 = 71 * 20 - 20 ;\n      var dy2 = 39 * 20 - 20;\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n      // walls \n      for (var i = 0; i < 20; i++)\n        Board[(10 + i) * Xb + 29] = 4;\n  }\n  const visualiziation = (p5: p5Types, _queue : any) => {\n    // _queue is the path\n    var x = 13 * 20 - 20;\n    var y = 10 * 20 - 20;\n    var dx2 = 71 * 20 - 20 ;\n    var dy2 = 39 * 20 - 20;\n\n    // draw path\n    while (_queue.length > 0)\n    {\n      var current = _queue[_queue.length - 1].index\n      // p5.fill(\"orange\");\n      // p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n      Board[current] = 8;\n      _queue.pop()\n    }\n    // drawing squars\n    p5.fill(\"green\");\n    p5.square(x, y, 20);\n    p5.fill(\"grey\");\n    p5.square(dx2, dy2, 20);\n  }\n\n  const Algo = (p5 : p5Types) => {\n    \n    // white 0; red 2; green 3; brown 4; yellow 8;  black;\n    // init default variables\n      setWalls(p5)\n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n      var dx2 = 71 * 20 - 20 ;\n      var dy2 = 39 * 20 - 20;\n      //\n      const unit = 20;\n      // \n      var Nodes = new Array(Xb * Yb).fill(Node)\n      var _queue = new Array()\n      var _start = Math.round(y / unit) * Xb + Math.round(x / unit)\n      var _end  = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit)\n      \n      // BFS \n      var Closed = new Array()\n      var Open = new Array()\n      var _visited = new Array(Xb * Yb).fill(false)\n      var _current = _start\n      \n    // set queue\n      while (_queue.length > 0) _queue.pop()\n      while (Closed.length > 0) Closed.pop()\n \n    // step 1\n      while (Open.length > 0) Open.pop()\n\n      Nodes[_start]  = new Node(y,x,true, _start)\n\n      Open.push(Nodes[_start])\n      _queue.push(Nodes[_start])\n\n      // step 2\n      if (Open.length <= 0)\n        alert(\"Open is Empty\")\n      \n      // step 3\n\n        // remove the smallest element from the open list to the closed list\n        // if node is goal then ralert found \n      \n      // step 4\n        // find the neighbors of the current node\n      var Nq = new Array()\n\n      let tmp = new Node(0,0,false,_current - Xb)\n      let tmp1 = new Node(0,0,false, _current + 1)\n      let tmp2 = new Node(0,0,false, _current + Xb)\n      let tmp3 = new Node(0,0,false, _current - 1)\n\n      \n      Nq.push(tmp)\n      Nq.push(tmp1)\n      Nq.push(tmp2)\n      Nq.push(tmp3)\n      \n      // _queue.push(tmp)\n      // _queue.push(tmp1)\n      // _queue.push(tmp2)\n      // _queue.push(tmp3)\n\n      // step 5\n      for (let i = 0; i < Nq.length; i++)\n      {\n        if (Board[Nq[i].index] === _end)\n          alert(\"END FOUND\")\n        \n        if (Nq[i].index >= 0 && Nq[i].index < Xb * Yb && Board[Nq[i].index] !== 4 &&  _visited[Nq[i].index] === false)\n        {\n          var tmpNode = new Node(Nq[i].y, Nq[i].x, true, Nq[i].index)\n          tmpNode.setG(Math.abs(_start - Nq[i].index))\n          tmpNode.setH(Math.abs(_end - Nq[i].index))\n          tmpNode.setf()\n          tmpNode.setParent( Nq[i].index)\n          Open.push(tmpNode)\n        }\n      }\n\n\n      visualiziation(p5, _queue)\n  }\n  \n\n  const handleAction = (p5: p5Types) => {\n    if (p5.key === 's' && exp === false)\n    {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20)\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20,170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n    if (p5.key === 'e' && sep === false)\n    {\n\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20,190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n    if (p5.key === 'w')\n    {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n          Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n\n          sep = true;\n      }\n   \n    }\n    if (p5.key === 'r')\n    {\n      exp = false;\n      sep = false;\n      isFound = false;\n\n      for (let i = 0; i < Xb; i++) \n      {\n        for (let j = 0; j < Yb; j++) \n          if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4)\n            Board[j * Xb + i] = 0;\n      }\n      let curr = 0\n      while (curr < Board.length)\n      {\n        if (Board[curr] === 8)\n          Board[curr] = 0;\n          curr++\n      }\n\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false)\n    {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'ñ' || p5.key === ';')\n    {\n      Algo(p5)\n    }\n  }\n\n  const draw = (p5: p5Types) => {\n    drawBoardElements(p5)\n    handleAction(p5)\n\t}\n  return(\n    <div className='board'>\n      <Sketch setup={setup} draw={draw} />\n      <VisualizeData data={state.data}/>\n      {/* <div className='cordX'>X : {state.data.expX} , {state.data.expX}</div>\n      <div className='cordY'>Y : {state.data.sepX} , {state.data.sepY}</div> */}\n    </div>\n  )\n}\n\nfunction VisualizeData(props: Props)\n{\n  return (\n    <div className='board__info'>\n        <div>Dashboard Infos</div>\n        <div className='cordX'>X : {props.data.expX} , {props.data.expX}</div>\n        <div className='cordY'>Y : {props.data.sepX} , {props.data.sepY}</div>\n      </div>);\n}\nconst FindYourPath = (X : Props, p5: p5Types) => {\n\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}