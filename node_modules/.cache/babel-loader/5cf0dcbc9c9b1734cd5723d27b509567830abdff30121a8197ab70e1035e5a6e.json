{"ast":null,"code":"var _jsxFileName = \"/Users/eelaazmi/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx\";\nimport React from 'react';\nimport Sketch from \"react-p5\";\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Node {\n  constructor(_x, _y, _visited) {\n    this.x = void 0;\n    this.y = void 0;\n    this.visited = void 0;\n    this.f = void 0;\n    this.g = void 0;\n    this.h = void 0;\n    this.x = _x;\n    this.y = _y;\n    this.visited = _visited;\n    this.f = 0;\n    this.g = 0;\n    this.h = 0;\n  }\n  setX(x) {\n    this.x = x;\n  }\n  setY(y) {\n    this.y = y;\n  }\n  setF(f) {\n    this.f = f;\n  }\n  setf() {\n    this.f = this.g + this.h;\n  }\n  setG(g) {\n    this.g = g;\n  }\n  setH(h) {\n    this.h = h;\n  }\n  setVisited(visited) {\n    this.visited = visited;\n  }\n  getX() {\n    return this.x;\n  }\n  getY() {\n    return this.y;\n  }\n  getF() {\n    return this.f;\n  }\n  getG() {\n    return this.g;\n  }\n  getH() {\n    return this.h;\n  }\n  getVisited() {\n    return this.visited;\n  }\n}\nconst width = 1440;\nconst height = 800;\nconst Xb = width / 20;\nconst Yb = height / 20;\nexport default function Dashboard() {\n  var exp = false;\n  var sep = false;\n  var isFound = false;\n  let Board = new Array(Xb * Yb).fill(0);\n\n  // acces with Board[y * Xb + x]\n  var state = {\n    board: {\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data: {\n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  };\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(1000);\n    p5.background('#222222');\n    for (let i = 0; i < 1400; i += 20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i += 20) {\n      p5.line(0, i, 1400, i);\n    }\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n  };\n  const infoBoard = p5 => {\n    p5.fill(\"white\");\n    if (exp || sep) p5.rect(0, 0, 230, 200);else p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb, 130, 20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20, 20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20, 40);\n    p5.text(\"Press s : select first square\", 20, 60);\n    p5.text(\"Press e : select second square\", 20, 80);\n    p5.text(\"Press w : select wall square\", 20, 100);\n    p5.text(\"Press p : Use Path Finder\", 20, 120);\n    p5.text(\"Press r : Reset\", 20, 140);\n    if (sep) {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20, 170);\n    }\n    if (exp) {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20, 190);\n    }\n  };\n  const drawBoardElements = p5 => {\n    for (let i = 0; i < Xb; i++) for (let j = 0; j < Yb; j++) {\n      // white 0; red 2; green 3; brown 4; yellow 8;  black;\n      if (Board[j * Xb + i] === 0) {\n        p5.fill(\"white\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 2) {\n        p5.fill(\"red\");\n        p5.square(i * 20, j * 20, 20);\n        p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 3) {\n        p5.fill(\"green\");\n        p5.square(i * 20, j * 20, 20);\n        p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 4) {\n        p5.fill(\"brown\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else if (Board[j * Xb + i] === 8) {\n        p5.fill(\"orange\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      } else {\n        p5.fill(\"black\");\n        p5.square(i * 20, j * 20, 20);\n        p5.noFill();\n      }\n    }\n    if (isFound) {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  };\n  const setWalls = p5 => {\n    // init default variables \n    var x = 13 * 20 - 20;\n    var y = 10 * 20 - 20;\n    var dx2 = 71 * 20 - 20;\n    var dy2 = 39 * 20 - 20;\n    p5.fill(\"orange\");\n    p5.square(x, y, 20);\n    p5.fill(\"grey\");\n    p5.square(dx2, dy2, 20);\n    // walls \n    for (var i = 0; i < 20; i++) Board[(10 + i) * Xb + 29] = 4;\n  };\n  const visualiziation = (p5, _queue) => {\n    // _queue is the path\n    var x = 13 * 20 - 20;\n    var y = 10 * 20 - 20;\n    var dx2 = 71 * 20 - 20;\n    var dy2 = 39 * 20 - 20;\n\n    // draw path\n    while (_queue.length > 0) {\n      var current = _queue[_queue.length - 1];\n      // p5.fill(\"orange\");\n      // p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n      Board[current] = 8;\n      _queue.pop();\n    }\n    // drawing squars\n    p5.fill(\"green\");\n    p5.square(x, y, 20);\n    p5.fill(\"grey\");\n    p5.square(dx2, dy2, 20);\n  };\n  const Algo = p5 => {\n    // white 0; red 2; green 3; brown 4; yellow 8;  black;\n    // init default variables\n    setWalls(p5);\n    var x = 13 * 20 - 20;\n    var y = 10 * 20 - 20;\n    var dx2 = 71 * 20 - 20;\n    var dy2 = 39 * 20 - 20;\n    //\n    const unit = 20;\n\n    // BFS \n    var Nodes = new Array(Xb * Yb).fill(Node);\n    var _queue = new Array();\n    var _start = Math.round(y / unit) * Xb + Math.round(x / unit);\n    var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit);\n\n    // set queue\n    while (_queue.length > 0) _queue.pop();\n    dis = Math.abs(dis);\n    var Closed = new Array();\n    while (Closed.length > 0) Closed.pop();\n\n    // step 1\n    var Open = new Array();\n    while (Open.length > 0) Open.pop();\n    Open.push(_start);\n    _queue.push(_start);\n    Nodes[_start].visited = true;\n    Nodes[_start].g = 0;\n    Nodes[_start].h = 0;\n    Nodes[_start].f = 0;\n\n    // step 2\n    if (Open.length <= 0) alert(\"Open is Empty\");\n\n    // step 3\n\n    visualiziation(p5, _queue);\n  };\n  const handleAction = p5 => {\n    if (p5.key === 's' && exp === false) {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20, 170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'e' && sep === false) {\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20, 190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n\n    if (p5.key === 'w') {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \", x, y);\n      p5.square(x, y, 20);\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT) {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n        sep = true;\n      }\n    }\n    if (p5.key === 'r') {\n      exp = false;\n      sep = false;\n      isFound = false;\n      for (let i = 0; i < Xb; i++) {\n        for (let j = 0; j < Yb; j++) if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4) Board[j * Xb + i] = 0;\n      }\n      let curr = 0;\n      while (curr < Board.length) {\n        if (Board[curr] === 8) Board[curr] = 0;\n        curr++;\n      }\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false) {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'Ã±' || p5.key === ';') {\n      Algo(p5);\n    }\n  };\n  const draw = p5 => {\n    drawBoardElements(p5);\n    handleAction(p5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(Sketch, {\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VisualizeData, {\n      data: state.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nfunction VisualizeData(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Dashboard Infos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordX\",\n      children: [\"X : \", props.data.expX, \" , \", props.data.expX]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cordY\",\n      children: [\"Y : \", props.data.sepX, \" , \", props.data.sepY]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n}\n_c2 = VisualizeData;\nconst FindYourPath = (X, p5) => {\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n};\n_c3 = FindYourPath;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"VisualizeData\");\n$RefreshReg$(_c3, \"FindYourPath\");","map":{"version":3,"names":["React","Sketch","Node","constructor","_x","_y","_visited","x","y","visited","f","g","h","setX","setY","setF","setf","setG","setH","setVisited","getX","getY","getF","getG","getH","getVisited","width","height","Xb","Yb","Dashboard","exp","sep","isFound","Board","Array","fill","state","board","data","expX","expY","sepX","sepY","setup","p5","canvasParentRef","createCanvas","parent","stroke","frameRate","background","i","line","infoBoard","rect","text","key","mouseIsPressed","drawBoardElements","j","square","noFill","FindYourPath","setWalls","dx2","dy2","visualiziation","_queue","length","current","pop","Algo","unit","Nodes","_start","Math","round","_end","dis","abs","Closed","Open","push","alert","handleAction","mouseX","mouseY","console","log","mouseButton","LEFT","curr","draw","VisualizeData","props","X","x2","y2"],"sources":["/Users/eelaazmi/Desktop/PathFinderAlgorithmeP5/src/Dashboard.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport './Dashboard.css';\n\nclass Node {\n  x: number;\n  y : number;\n  visited : boolean;\n  f : number;\n  g : number;\n  h : number;\n\n  constructor(_x : number, _y : number, _visited : boolean) {\n    this.x = _x;\n    this.y = _y;\n    this.visited = _visited;\n\n    this.f = 0;\n    this.g = 0;\n    this.h = 0;\n    \n  }\n  setX(x : number) { this.x = x;  }\n  setY(y : number) { this.y = y;  }\n  setF(f : number) {  this.f = f; }\n  setf() {  this.f = this.g + this.h; }\n  setG(g : number) {  this.g = g; }\n  setH(h : number) {  this.h = h; }\n  setVisited(visited : boolean) {  this.visited = visited; }\n\n  getX() { return this.x; }\n  getY() { return this.y; }\n  getF() { return this.f; }\n  getG() { return this.g; }\n  getH() { return this.h; }\n  getVisited() { return this.visited; }\n\n}\n\nconst   width = 1440;\nconst   height = 800;\nconst   Xb = width / 20;\nconst   Yb = height / 20;\n\nexport interface Props {\n  data: {\n    // name: string;\n    expX: number;\n    expY: number;\n    sepX: number;\n    sepY: number;\n  }\n}\n\nexport default function Dashboard()\n{\n  var     exp = false;\n  var     sep = false;\n  var     isFound = false;\n  let     Board =  new Array(Xb * Yb).fill(0);\n\n  // acces with Board[y * Xb + x]\n  var state = {\n    board:{\n      Xb: Xb,\n      Yb: Yb,\n      Board: Board\n    },\n    data :  {  \n      expX: 0,\n      expY: 0,\n      sepX: 0,\n      sepY: 0\n    }\n  }\n\n\n\n  const setup = (p5: p5Types, canvasParentRef: Element) => {\n\n\t\tp5.createCanvas(width, height).parent(canvasParentRef);\n    p5.stroke(50); // Set line drawing color to white\n    p5.frameRate(1000);\n\t\tp5.background('#222222')\n\n    for (let i = 0; i < 1400; i+=20) {\n      p5.line(i, 0, i, 1400);\n    }\n    for (let i = 0; i < 680; i+=20) {\n      p5.line(0, i, 1400, i);\n    }\n\n    state.board.Board = Board;\n    state.board.Xb = Xb;\n    state.board.Yb = Yb;\n  }\n  const infoBoard = (p5: p5Types) => {\n    p5.fill(\"white\");\n    if (exp ||Â sep)\n      p5.rect(0, 0, 230, 200);\n    else \n      p5.rect(0, 0, 230, 150);\n    p5.fill(\"darkblue\");\n    p5.stroke(\"darkblue\");\n    p5.text(\"Xb : \" + Xb + \" , Yb :\" + Yb , 130,20);\n    p5.text(\"key pressed : [ \" + p5.key + \" ]\", 20,20);\n    p5.text(\"mouse presse : [\" + p5.mouseIsPressed + \"]\", 20,40);\n    p5.text(\"Press s : select first square\", 20,60);\n    p5.text(\"Press e : select second square\", 20,80);\n    p5.text(\"Press w : select wall square\", 20,100);\n    p5.text(\"Press p : Use Path Finder\", 20,120);\n    p5.text(\"Press r : Reset\", 20,140);\n    if (sep)\n    {\n      p5.text(\"Y : \" + state.data.sepY + \", \" + state.data.sepX, 20,170)\n    }\n    if (exp)\n    {\n      p5.text(\"X : \" + state.data.expY + \", \" + state.data.expX, 20,190)\n    }\n  }\n  const drawBoardElements = (p5: p5Types ) => {\n    for (let i = 0; i < Xb; i++) \n      for (let j = 0; j < Yb; j++) \n      {\n        // white 0; red 2; green 3; brown 4; yellow 8;  black;\n        if (Board[j * Xb + i] === 0){\n          p5.fill(\"white\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 2)\n        {\n          p5.fill(\"red\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" X \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 3)\n        {\n          p5.fill(\"green\");\n          p5.square(i * 20, j * 20, 20);\n          p5.text(\" Y \", i * 20 + 3, j * 20 + 16);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 4)\n        {\n          p5.fill(\"brown\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else if (Board[j * Xb + i] === 8)\n        {\n          p5.fill(\"orange\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n        else\n        {\n          p5.fill(\"black\");\n          p5.square(i * 20, j * 20, 20);\n          p5.noFill();\n        }\n      }\n    if (isFound)\n    {\n      p5.fill(\"black\");\n      FindYourPath(state, p5);\n    }\n    infoBoard(p5);\n  }\n\n  const setWalls = (p5: p5Types) => {\n      // init default variables \n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n      var dx2 = 71 * 20 - 20 ;\n      var dy2 = 39 * 20 - 20;\n      p5.fill(\"orange\");\n      p5.square(x, y, 20);\n      p5.fill(\"grey\");\n      p5.square(dx2, dy2, 20);\n      // walls \n      for (var i = 0; i < 20; i++)\n        Board[(10 + i) * Xb + 29] = 4;\n  }\n  const visualiziation = (p5: p5Types, _queue : any) => {\n    // _queue is the path\n    var x = 13 * 20 - 20;\n    var y = 10 * 20 - 20;\n    var dx2 = 71 * 20 - 20 ;\n    var dy2 = 39 * 20 - 20;\n\n    // draw path\n    while (_queue.length > 0)\n    {\n      var current = _queue[_queue.length - 1]\n      // p5.fill(\"orange\");\n      // p5.square((current % Xb) * unit, Math.floor(current / Xb) * unit, unit);\n      Board[current] = 8;\n      _queue.pop()\n    }\n    // drawing squars\n    p5.fill(\"green\");\n    p5.square(x, y, 20);\n    p5.fill(\"grey\");\n    p5.square(dx2, dy2, 20);\n  }\n\n  const Algo = (p5 : p5Types) => {\n    \n    // white 0; red 2; green 3; brown 4; yellow 8;  black;\n    // init default variables\n      setWalls(p5)\n      var x = 13 * 20 - 20;\n      var y = 10 * 20 - 20;\n      var dx2 = 71 * 20 - 20 ;\n      var dy2 = 39 * 20 - 20;\n      //\n      const unit = 20;\n\n\n    // BFS \n      var Nodes = new Array(Xb * Yb).fill(Node)\n      var _queue = new Array()\n      var _start = Math.round(y / unit) * Xb + Math.round(x / unit)\n      var _end = Math.round(dy2 / unit) * Xb + Math.round(dx2 / unit)\n\n      // set queue\n      while (_queue.length > 0) _queue.pop()\n\n      dis = Math.abs(dis)\n\n      var Closed = new Array()\n      while (Closed.length > 0) Closed.pop()\n \n      // step 1\n      var Open = new Array()\n      while (Open.length > 0) Open.pop()\n\n      Open.push(_start)\n      _queue.push(_start)\n      Nodes[_start].visited = true\n      Nodes[_start].g = 0\n      Nodes[_start].h = 0\n      Nodes[_start].f = 0\n\n      // step 2\n      if (Open.length <= 0)\n        alert(\"Open is Empty\")\n      \n      // step 3\n\n\n\n\n\n      visualiziation(p5, _queue)\n  }\n  \n\n  const handleAction = (p5: p5Types) => {\n    if (p5.key === 's' && exp === false)\n    {\n      p5.fill(\"red\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20)\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 2;\n        exp = true;\n        state.data.expX = x;\n        state.data.expY = y;\n        p5.text(\"X : \" + x + \", \" + y, 20,170);\n\n        // setstate({\n        //   data :  { \n        //     expX: state.data.expX,\n        //     expY: state.data.expY,\n        //     sepX: x,\n        //     sepY: y,\n        //   }})\n      }\n    }\n    if (p5.key === 'e' && sep === false)\n    {\n\n      p5.fill(\"green\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n        Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 3;\n        sep = true;\n        state.data.sepX = x;\n        state.data.sepY = y;\n        p5.text(\"Y : \" + x + \", \" + y, 20,190);\n\n        // setstate({\n        //   data :  {  \n        //     expX: x,\n        //     expY: y,\n        //     sepX: state.data.sepX,\n        //     sepY: state.data.sepY,\n        //   }})\n      }\n    }\n    if (p5.key === 'w')\n    {\n      p5.fill(\"brown\");\n      let x = Math.round(p5.mouseX / 20) * 20;\n      let y = Math.round(p5.mouseY / 20) * 20;\n      console.log(\"hello \" , x, y);\n      p5.square(x, y, 20);\n\n      if (p5.mouseIsPressed === true && p5.mouseButton === p5.LEFT)\n      {\n        p5.fill(\"yellow\");\n        p5.square(x, y, 20);\n\n        // if (Board[Math.round(y / 20) * Xb + Math.round(x / 20)] == 4)\n        //   Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 0;\n        // else\n          Board[Math.round(y / 20) * Xb + Math.round(x / 20)] = 4;\n\n          sep = true;\n      }\n   \n    }\n    if (p5.key === 'r')\n    {\n      exp = false;\n      sep = false;\n      isFound = false;\n\n      for (let i = 0; i < Xb; i++) \n      {\n        for (let j = 0; j < Yb; j++) \n          if (Board[j * Xb + i] === 2 || Board[j * Xb + i] === 3 || Board[j * Xb + i] === 4)\n            Board[j * Xb + i] = 0;\n      }\n      let curr = 0\n      while (curr < Board.length)\n      {\n        if (Board[curr] === 8)\n          Board[curr] = 0;\n          curr++\n      }\n\n    }\n    if (p5.key === 'p' && exp === true && sep === true && isFound === false)\n    {\n      FindYourPath(state, p5);\n      isFound = true;\n    }\n    if (p5.key === 'Ã±' || p5.key === ';')\n    {\n      Algo(p5)\n    }\n  }\n\n  const draw = (p5: p5Types) => {\n    drawBoardElements(p5)\n    handleAction(p5)\n\t}\n  return(\n    <div className='board'>\n      <Sketch setup={setup} draw={draw} />\n      <VisualizeData data={state.data}/>\n      {/* <div className='cordX'>X : {state.data.expX} , {state.data.expX}</div>\n      <div className='cordY'>Y : {state.data.sepX} , {state.data.sepY}</div> */}\n    </div>\n  )\n}\n\nfunction VisualizeData(props: Props)\n{\n  return (\n    <div className='board__info'>\n        <div>Dashboard Infos</div>\n        <div className='cordX'>X : {props.data.expX} , {props.data.expX}</div>\n        <div className='cordY'>Y : {props.data.sepX} , {props.data.sepY}</div>\n      </div>);\n}\nconst FindYourPath = (X : Props, p5: p5Types) => {\n\n  let x = X.data.expX;\n  let y = X.data.expY;\n  let x2 = X.data.sepX;\n  let y2 = X.data.sepY;\n\n  p5.line(x + 10, y + 10, x2 + 10, y2 + 10);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}